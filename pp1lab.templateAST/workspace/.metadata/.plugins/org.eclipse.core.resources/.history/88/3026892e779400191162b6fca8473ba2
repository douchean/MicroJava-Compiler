// generated with ast extension for cup
// version 0.8
// 20/5/2019 22:57:46


package rs.ac.bg.etf.pp1.ast;

public interface Visitor { 

    public void visit(Powfact Powfact);
    public void visit(Mulop Mulop);
    public void visit(InterfaceMethodDeclList InterfaceMethodDeclList);
    public void visit(Relop Relop);
    public void visit(TermList TermList);
    public void visit(Implementation Implementation);
    public void visit(FormParsArg FormParsArg);
    public void visit(ProgDeclList ProgDeclList);
    public void visit(OptionalBrackets OptionalBrackets);
    public void visit(StatementList StatementList);
    public void visit(Addop Addop);
    public void visit(Factor Factor);
    public void visit(ArrayParts ArrayParts);
    public void visit(CondTerm CondTerm);
    public void visit(Designator Designator);
    public void visit(InterfaceMethodDecl InterfaceMethodDecl);
    public void visit(Term Term);
    public void visit(Condition Condition);
    public void visit(BasicIf BasicIf);
    public void visit(EnumExprList EnumExprList);
    public void visit(ActualParamList ActualParamList);
    public void visit(VarDeclList VarDeclList);
    public void visit(FormalParamList FormalParamList);
    public void visit(Expr Expr);
    public void visit(ConstExprList ConstExprList);
    public void visit(ActPars ActPars);
    public void visit(ClassImplementsList ClassImplementsList);
    public void visit(MethodTypeName MethodTypeName);
    public void visit(DesignatorStatement DesignatorStatement);
    public void visit(ActualPars ActualPars);
    public void visit(OptionalCondition OptionalCondition);
    public void visit(Extension Extension);
    public void visit(OptionalDesignatorStatement OptionalDesignatorStatement);
    public void visit(Statement Statement);
    public void visit(VarDecl VarDecl);
    public void visit(VarExprList VarExprList);
    public void visit(ClassDecl ClassDecl);
    public void visit(CondFact CondFact);
    public void visit(MethodDeclList MethodDeclList);
    public void visit(EnumExpr EnumExpr);
    public void visit(FormPars FormPars);
    public void visit(ConstType ConstType);
    public void visit(ActualParam ActualParam);
    public void visit(ActualParams ActualParams);
    public void visit(NoActuals NoActuals);
    public void visit(Actuals Actuals);
    public void visit(FormalParamDecl FormalParamDecl);
    public void visit(SingleFormalParamDecl SingleFormalParamDecl);
    public void visit(FormalParamDecls FormalParamDecls);
    public void visit(Type Type);
    public void visit(NoVarDecl NoVarDecl);
    public void visit(VarDeclarations VarDeclarations);
    public void visit(PercentOp PercentOp);
    public void visit(DivideOp DivideOp);
    public void visit(MultipleOp MultipleOp);
    public void visit(AddopMinus AddopMinus);
    public void visit(AddopPlus AddopPlus);
    public void visit(RelationalLessEqual RelationalLessEqual);
    public void visit(RelationalLess RelationalLess);
    public void visit(RelationalGreaterEqual RelationalGreaterEqual);
    public void visit(RelationalGreater RelationalGreater);
    public void visit(RelationalNotEqual RelationalNotEqual);
    public void visit(RelationalEqual RelationalEqual);
    public void visit(Assignop Assignop);
    public void visit(ArrayDes ArrayDes);
    public void visit(DesignatorIdent DesignatorIdent);
    public void visit(DesignatorListExpr DesignatorListExpr);
    public void visit(DesignatorListIdent DesignatorListIdent);
    public void visit(NewTypeArr NewTypeArr);
    public void visit(ArrPart ArrPart);
    public void visit(Emptiness Emptiness);
    public void visit(ArraySinglePart ArraySinglePart);
    public void visit(ArrayMultipleParts ArrayMultipleParts);
    public void visit(FactExpr FactExpr);
    public void visit(FactNewArrayInit FactNewArrayInit);
    public void visit(FactNewExpr FactNewExpr);
    public void visit(FactNew FactNew);
    public void visit(FactBool FactBool);
    public void visit(FactChar FactChar);
    public void visit(FactNumber FactNumber);
    public void visit(FactDesignatorParsEmpty FactDesignatorParsEmpty);
    public void visit(FactDesignatorPars FactDesignatorPars);
    public void visit(FactDesignator FactDesignator);
    public void visit(PowerFact PowerFact);
    public void visit(Power Power);
    public void visit(TermSingle TermSingle);
    public void visit(TermMultiplied TermMultiplied);
    public void visit(TermListSingle TermListSingle);
    public void visit(TermListAddop TermListAddop);
    public void visit(ExpressionPositive ExpressionPositive);
    public void visit(ExpressionNegative ExpressionNegative);
    public void visit(ConditionFactExpressions ConditionFactExpressions);
    public void visit(ConditionFactExpression ConditionFactExpression);
    public void visit(Andy Andy);
    public void visit(ConditionTermSingle ConditionTermSingle);
    public void visit(ConditionTerms ConditionTerms);
    public void visit(Oreo Oreo);
    public void visit(ConditionSingle ConditionSingle);
    public void visit(Conditions Conditions);
    public void visit(ActPar ActPar);
    public void visit(ActParameterSingle ActParameterSingle);
    public void visit(ActParameters ActParameters);
    public void visit(DesignatorStatementDecrement DesignatorStatementDecrement);
    public void visit(DesignatorStatementIncrement DesignatorStatementIncrement);
    public void visit(DesignatorStatementEmpty DesignatorStatementEmpty);
    public void visit(DesignatorStatementActParameters DesignatorStatementActParameters);
    public void visit(DesignatorStatementAssignError DesignatorStatementAssignError);
    public void visit(DesignatorStatementAssign DesignatorStatementAssign);
    public void visit(NotExistingCondition NotExistingCondition);
    public void visit(ExistingCondition ExistingCondition);
    public void visit(NotExistingDesignatorStatement NotExistingDesignatorStatement);
    public void visit(ExistingDesignatorStatement ExistingDesignatorStatement);
    public void visit(StatementEmpty StatementEmpty);
    public void visit(Statements Statements);
    public void visit(IfCond IfCond);
    public void visit(BasicIfError BasicIfError);
    public void visit(BasicIffy BasicIffy);
    public void visit(Else Else);
    public void visit(RePare RePare);
    public void visit(Sammy Sammy);
    public void visit(StatementListStatement StatementListStatement);
    public void visit(StatementPrintExpr StatementPrintExpr);
    public void visit(StatementPrintExprNum StatementPrintExprNum);
    public void visit(StatementRead StatementRead);
    public void visit(StatementReturnExpr StatementReturnExpr);
    public void visit(StatementReturn StatementReturn);
    public void visit(StatementContinue StatementContinue);
    public void visit(StatementBreak StatementBreak);
    public void visit(StatementFor StatementFor);
    public void visit(StatementIfElse StatementIfElse);
    public void visit(StatemtntIf StatemtntIf);
    public void visit(StatementDesignator StatementDesignator);
    public void visit(NoExistingBrackets NoExistingBrackets);
    public void visit(ExistingBrackets ExistingBrackets);
    public void visit(TypeBrackets TypeBrackets);
    public void visit(FormParsSingle FormParsSingle);
    public void visit(FormParsListError FormParsListError);
    public void visit(FormParsList FormParsList);
    public void visit(ParametersError ParametersError);
    public void visit(Parameters Parameters);
    public void visit(NoParameters NoParameters);
    public void visit(MethodDecl MethodDecl);
    public void visit(MethodVoid MethodVoid);
    public void visit(MethodType MethodType);
    public void visit(InterfaceMethodVoid InterfaceMethodVoid);
    public void visit(InterfaceMethodType InterfaceMethodType);
    public void visit(NoInterfaceMethods NoInterfaceMethods);
    public void visit(InterfaceMethodList InterfaceMethodList);
    public void visit(InterfaceDecl InterfaceDecl);
    public void visit(NoClassImplementList NoClassImplementList);
    public void visit(ClassImplementList ClassImplementList);
    public void visit(NoImplement NoImplement);
    public void visit(Implement Implement);
    public void visit(NoExtendsClass NoExtendsClass);
    public void visit(ExtendsClass ExtendsClass);
    public void visit(ClassDeclarationMethods ClassDeclarationMethods);
    public void visit(ClassDeclaration ClassDeclaration);
    public void visit(VarExpr VarExpr);
    public void visit(VarExpressionSingle VarExpressionSingle);
    public void visit(VarExpressionsError VarExpressionsError);
    public void visit(VarExpressions VarExpressions);
    public void visit(VarDeclError VarDeclError);
    public void visit(VarDeclaration VarDeclaration);
    public void visit(EnumExpressionIdentNumConst EnumExpressionIdentNumConst);
    public void visit(EnumExpressionIdent EnumExpressionIdent);
    public void visit(EnumExpressionSingle EnumExpressionSingle);
    public void visit(EnumExpressions EnumExpressions);
    public void visit(EnumName EnumName);
    public void visit(EnumDecl EnumDecl);
    public void visit(ConstantBoolean ConstantBoolean);
    public void visit(ConstantCharacter ConstantCharacter);
    public void visit(ConstantNumber ConstantNumber);
    public void visit(ConstExpressionSingle ConstExpressionSingle);
    public void visit(ConstExpressions ConstExpressions);
    public void visit(ConstDecl ConstDecl);
    public void visit(NoMethodDecl NoMethodDecl);
    public void visit(MethodDeclarations MethodDeclarations);
    public void visit(ProgramEmpty ProgramEmpty);
    public void visit(ProgramInterfaces ProgramInterfaces);
    public void visit(ProgramEnums ProgramEnums);
    public void visit(ProgramDeclarations ProgramDeclarations);
    public void visit(ProgramVariables ProgramVariables);
    public void visit(ProgramConstants ProgramConstants);
    public void visit(ProgName ProgName);
    public void visit(Program Program);

}
