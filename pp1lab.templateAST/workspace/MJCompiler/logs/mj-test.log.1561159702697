INFO  01:27:44,929 - Compiling source file: C:\Users\Dusan\Desktop\micko\pp1lab.templateAST\workspace\MJCompiler\test\test2.mj
INFO  01:27:45,155 - #2 program
INFO  01:27:45,156 - #15 test2
INFO  01:27:45,157 - #40 enum
INFO  01:27:45,165 - #15 IncrementType
INFO  01:27:45,166 - #3 {
INFO  01:27:45,167 - #15 BY_ONE
INFO  01:27:45,168 - #8 ,
INFO  01:27:45,169 - #15 DOUBLE_VALUE
INFO  01:27:45,169 - #4 }
INFO  01:27:45,174 - #15 int
INFO  01:27:45,182 - #15 i
INFO  01:27:45,184 - #5 ;
INFO  01:27:45,189 - #15 bool
INFO  01:27:45,190 - #15 ibool
INFO  01:27:45,190 - #5 ;
INFO  01:27:45,190 - #15 int
INFO  01:27:45,191 - #15 niz
INFO  01:27:45,191 - #41 [
INFO  01:27:45,191 - #42 ]
INFO  01:27:45,192 - #5 ;
INFO  01:27:45,193 - #3 {
INFO  01:27:45,194 - #15 int
INFO  01:27:45,196 - #15 sum
INFO  01:27:45,196 - #6 (
INFO  01:27:45,197 - #15 int
INFO  01:27:45,197 - #15 z
INFO  01:27:45,197 - #8 ,
INFO  01:27:45,200 - #15 int
INFO  01:27:45,200 - #15 d
INFO  01:27:45,200 - #7 )
INFO  01:27:45,201 - #3 {
INFO  01:27:45,202 - #10 return
INFO  01:27:45,203 - #15 z
INFO  01:27:45,203 - #11 +
INFO  01:27:45,204 - #15 d
INFO  01:27:45,206 - #5 ;
INFO  01:27:45,207 - #4 }
INFO  01:27:45,210 - #15 int
INFO  01:27:45,213 - #15 inkrement
INFO  01:27:45,213 - #6 (
INFO  01:27:45,229 - #15 int
INFO  01:27:45,230 - #15 a
INFO  01:27:45,234 - #8 ,
INFO  01:27:45,234 - #15 IncrementType
INFO  01:27:45,235 - #15 type
INFO  01:27:45,235 - #7 )
INFO  01:27:45,235 - #15 int
INFO  01:27:45,235 - #15 pom
INFO  01:27:45,235 - #5 ;
INFO  01:27:45,236 - #3 {
INFO  01:27:45,236 - #16 if
INFO  01:27:45,236 - #6 (
INFO  01:27:45,236 - #15 type
INFO  01:27:45,237 - #29 ==
INFO  01:27:45,237 - #15 IncrementType
INFO  01:27:45,246 - #28 .
INFO  01:27:45,246 - #15 BY_ONE
INFO  01:27:45,247 - #7 )
INFO  01:27:45,253 - #15 pom
INFO  01:27:45,261 - #12 =
INFO  01:27:45,261 - #47 1
INFO  01:27:45,264 - #5 ;
INFO  01:27:45,265 - #17 else
INFO  01:27:45,267 - #16 if
INFO  01:27:45,269 - #6 (
INFO  01:27:45,269 - #15 type
INFO  01:27:45,269 - #29 ==
INFO  01:27:45,270 - #15 IncrementType
INFO  01:27:45,270 - #28 .
INFO  01:27:45,270 - #15 DOUBLE_VALUE
INFO  01:27:45,270 - #7 )
INFO  01:27:45,271 - #15 pom
INFO  01:27:45,271 - #12 =
INFO  01:27:45,271 - #15 a
INFO  01:27:45,271 - #5 ;
INFO  01:27:45,272 - #10 return
INFO  01:27:45,275 - #15 sum
INFO  01:27:45,275 - #6 (
INFO  01:27:45,276 - #15 a
INFO  01:27:45,276 - #8 ,
INFO  01:27:45,281 - #15 pom
INFO  01:27:45,282 - #7 )
INFO  01:27:45,284 - #5 ;
INFO  01:27:45,287 - #4 }
INFO  01:27:45,288 - #13 void
INFO  01:27:45,288 - #15 main
INFO  01:27:45,288 - #6 (
INFO  01:27:45,289 - #7 )
INFO  01:27:45,289 - #3 {
INFO  01:27:45,290 - #16 if
INFO  01:27:45,291 - #6 (
INFO  01:27:45,291 - #47 1
INFO  01:27:45,292 - #30 !=
INFO  01:27:45,295 - #47 1
INFO  01:27:45,297 - #7 )
INFO  01:27:45,298 - #9 print
INFO  01:27:45,299 - #6 (
INFO  01:27:45,299 - #26 -
INFO  01:27:45,299 - #47 6
INFO  01:27:45,300 - #7 )
INFO  01:27:45,300 - #5 ;
INFO  01:27:45,302 - #17 else
INFO  01:27:45,303 - #9 print
INFO  01:27:45,303 - #6 (
INFO  01:27:45,303 - #47 0
INFO  01:27:45,304 - #7 )
INFO  01:27:45,305 - #5 ;
INFO  01:27:45,305 - #15 ibool
INFO  01:27:45,305 - #12 =
INFO  01:27:45,306 - #49 false
INFO  01:27:45,306 - #5 ;
INFO  01:27:45,306 - #15 i
INFO  01:27:45,306 - #12 =
INFO  01:27:45,307 - #47 0
INFO  01:27:45,307 - #5 ;
INFO  01:27:45,307 - #18 for
INFO  01:27:45,307 - #6 (
INFO  01:27:45,307 - #15 i
INFO  01:27:45,307 - #12 =
INFO  01:27:45,308 - #47 0
INFO  01:27:45,308 - #5 ;
INFO  01:27:45,310 - #15 i
INFO  01:27:45,312 - #33 <
INFO  01:27:45,313 - #47 5
INFO  01:27:45,315 - #5 ;
INFO  01:27:45,316 - #15 i
INFO  01:27:45,316 - #22 ++
INFO  01:27:45,317 - #7 )
INFO  01:27:45,319 - #3 {
INFO  01:27:45,322 - #16 if
INFO  01:27:45,322 - #6 (
INFO  01:27:45,322 - #15 i
INFO  01:27:45,322 - #29 ==
INFO  01:27:45,323 - #47 2
INFO  01:27:45,323 - #7 )
INFO  01:27:45,323 - #15 ibool
INFO  01:27:45,323 - #12 =
INFO  01:27:45,323 - #49 true
INFO  01:27:45,324 - #5 ;
INFO  01:27:45,324 - #4 }
INFO  01:27:45,324 - #16 if
INFO  01:27:45,326 - #6 (
INFO  01:27:45,326 - #15 ibool
INFO  01:27:45,326 - #7 )
INFO  01:27:45,331 - #16 if
INFO  01:27:45,331 - #6 (
INFO  01:27:45,331 - #15 i
INFO  01:27:45,332 - #29 ==
INFO  01:27:45,333 - #47 5
INFO  01:27:45,338 - #7 )
INFO  01:27:45,339 - #9 print
INFO  01:27:45,339 - #6 (
INFO  01:27:45,339 - #47 1
INFO  01:27:45,340 - #7 )
INFO  01:27:45,340 - #5 ;
INFO  01:27:45,340 - #17 else
INFO  01:27:45,342 - #9 print
INFO  01:27:45,344 - #6 (
INFO  01:27:45,344 - #26 -
INFO  01:27:45,345 - #47 1
INFO  01:27:45,345 - #7 )
INFO  01:27:45,345 - #5 ;
INFO  01:27:45,345 - #15 niz
INFO  01:27:45,346 - #12 =
INFO  01:27:45,346 - #27 new
INFO  01:27:45,347 - #15 int
INFO  01:27:45,348 - #41 [
INFO  01:27:45,348 - #47 3
INFO  01:27:45,348 - #42 ]
INFO  01:27:45,349 - #3 {
INFO  01:27:45,353 - #47 1
INFO  01:27:45,355 - #8 ,
INFO  01:27:45,365 - #47 2
INFO  01:27:45,365 - #8 ,
INFO  01:27:45,366 - #47 3
INFO  01:27:45,366 - #4 }
INFO  01:27:45,366 - #5 ;
INFO  01:27:45,367 - #15 niz
INFO  01:27:45,367 - #41 [
INFO  01:27:45,369 - #47 2
INFO  01:27:45,369 - #42 ]
INFO  01:27:45,369 - #12 =
INFO  01:27:45,370 - #15 sum
INFO  01:27:45,370 - #6 (
INFO  01:27:45,370 - #15 niz
INFO  01:27:45,370 - #41 [
INFO  01:27:45,371 - #47 1
INFO  01:27:45,371 - #42 ]
INFO  01:27:45,371 - #8 ,
INFO  01:27:45,371 - #15 niz
INFO  01:27:45,372 - #41 [
INFO  01:27:45,372 - #47 0
INFO  01:27:45,372 - #42 ]
INFO  01:27:45,373 - #7 )
INFO  01:27:45,373 - #11 +
INFO  01:27:45,373 - #47 1
INFO  01:27:45,373 - #5 ;
INFO  01:27:45,373 - #16 if
INFO  01:27:45,374 - #6 (
INFO  01:27:45,380 - #15 niz
INFO  01:27:45,381 - #41 [
INFO  01:27:45,381 - #47 2
INFO  01:27:45,381 - #42 ]
INFO  01:27:45,382 - #29 ==
INFO  01:27:45,383 - #47 4
INFO  01:27:45,383 - #24 ||
INFO  01:27:45,383 - #47 4
INFO  01:27:45,385 - #29 ==
INFO  01:27:45,385 - #47 4
INFO  01:27:45,386 - #7 )
INFO  01:27:45,386 - #9 print
INFO  01:27:45,386 - #6 (
INFO  01:27:45,386 - #15 ord
INFO  01:27:45,386 - #6 (
INFO  01:27:45,387 - #48 A
INFO  01:27:45,387 - #7 )
INFO  01:27:45,387 - #7 )
INFO  01:27:45,387 - #5 ;
INFO  01:27:45,387 - #17 else
INFO  01:27:45,387 - #9 print
INFO  01:27:45,387 - #6 (
INFO  01:27:45,387 - #15 ord
INFO  01:27:45,387 - #6 (
INFO  01:27:45,387 - #48 a
INFO  01:27:45,388 - #7 )
INFO  01:27:45,388 - #7 )
INFO  01:27:45,388 - #5 ;
INFO  01:27:45,388 - #9 print
INFO  01:27:45,388 - #6 (
INFO  01:27:45,388 - #15 eol
INFO  01:27:45,388 - #7 )
INFO  01:27:45,388 - #5 ;
INFO  01:27:45,388 - #15 i
INFO  01:27:45,388 - #12 =
INFO  01:27:45,388 - #47 0
INFO  01:27:45,388 - #5 ;
INFO  01:27:45,389 - #18 for
INFO  01:27:45,389 - #6 (
INFO  01:27:45,389 - #5 ;
INFO  01:27:45,400 - #15 i
INFO  01:27:45,401 - #33 <
INFO  01:27:45,401 - #47 10
INFO  01:27:45,401 - #5 ;
INFO  01:27:45,401 - #7 )
INFO  01:27:45,402 - #3 {
INFO  01:27:45,402 - #16 if
INFO  01:27:45,402 - #6 (
INFO  01:27:45,402 - #15 i
INFO  01:27:45,402 - #29 ==
INFO  01:27:45,402 - #47 3
INFO  01:27:45,402 - #7 )
INFO  01:27:45,402 - #3 {
INFO  01:27:45,403 - #15 i
INFO  01:27:45,403 - #22 ++
INFO  01:27:45,406 - #5 ;
INFO  01:27:45,406 - #20 continue
INFO  01:27:45,407 - #5 ;
INFO  01:27:45,407 - #4 }
INFO  01:27:45,417 - #16 if
INFO  01:27:45,417 - #6 (
INFO  01:27:45,417 - #15 i
INFO  01:27:45,417 - #29 ==
INFO  01:27:45,418 - #47 4
INFO  01:27:45,418 - #7 )
INFO  01:27:45,418 - #19 break
INFO  01:27:45,418 - #5 ;
INFO  01:27:45,418 - #15 i
INFO  01:27:45,419 - #12 =
INFO  01:27:45,419 - #15 inkrement
INFO  01:27:45,419 - #6 (
INFO  01:27:45,419 - #15 i
INFO  01:27:45,419 - #8 ,
INFO  01:27:45,420 - #15 IncrementType
INFO  01:27:45,420 - #28 .
INFO  01:27:45,420 - #15 BY_ONE
INFO  01:27:45,420 - #7 )
INFO  01:27:45,420 - #5 ;
INFO  01:27:45,422 - #4 }
INFO  01:27:45,422 - #16 if
INFO  01:27:45,422 - #6 (
INFO  01:27:45,423 - #15 i
INFO  01:27:45,423 - #29 ==
INFO  01:27:45,423 - #47 3
INFO  01:27:45,423 - #7 )
INFO  01:27:45,424 - #9 print
INFO  01:27:45,424 - #6 (
INFO  01:27:45,424 - #47 4
INFO  01:27:45,424 - #7 )
INFO  01:27:45,424 - #5 ;
INFO  01:27:45,424 - #17 else
INFO  01:27:45,425 - #9 print
INFO  01:27:45,425 - #6 (
INFO  01:27:45,425 - #26 -
INFO  01:27:45,425 - #47 4
INFO  01:27:45,425 - #7 )
INFO  01:27:45,425 - #5 ;
INFO  01:27:45,425 - #21 read
INFO  01:27:45,426 - #6 (
INFO  01:27:45,426 - #15 niz
INFO  01:27:45,426 - #41 [
INFO  01:27:45,426 - #47 0
INFO  01:27:45,426 - #42 ]
INFO  01:27:45,426 - #7 )
INFO  01:27:45,427 - #5 ;
INFO  01:27:45,427 - #21 read
INFO  01:27:45,427 - #6 (
INFO  01:27:45,427 - #15 niz
INFO  01:27:45,427 - #41 [
INFO  01:27:45,427 - #47 1
INFO  01:27:45,428 - #42 ]
INFO  01:27:45,428 - #7 )
INFO  01:27:45,428 - #5 ;
INFO  01:27:45,428 - #21 read
INFO  01:27:45,429 - #6 (
INFO  01:27:45,429 - #15 niz
INFO  01:27:45,429 - #41 [
INFO  01:27:45,429 - #47 2
INFO  01:27:45,429 - #42 ]
INFO  01:27:45,429 - #7 )
INFO  01:27:45,430 - #5 ;
INFO  01:27:45,430 - #9 print
INFO  01:27:45,430 - #6 (
INFO  01:27:45,430 - #15 eol
INFO  01:27:45,430 - #7 )
INFO  01:27:45,431 - #5 ;
INFO  01:27:45,431 - #9 print
INFO  01:27:45,431 - #6 (
INFO  01:27:45,431 - #15 sum
INFO  01:27:45,431 - #6 (
INFO  01:27:45,431 - #15 sum
INFO  01:27:45,431 - #6 (
INFO  01:27:45,431 - #15 niz
INFO  01:27:45,431 - #41 [
INFO  01:27:45,431 - #47 0
INFO  01:27:45,432 - #42 ]
INFO  01:27:45,432 - #8 ,
INFO  01:27:45,432 - #15 niz
INFO  01:27:45,432 - #41 [
INFO  01:27:45,432 - #47 1
INFO  01:27:45,432 - #42 ]
INFO  01:27:45,432 - #7 )
INFO  01:27:45,432 - #8 ,
INFO  01:27:45,432 - #15 niz
INFO  01:27:45,432 - #41 [
INFO  01:27:45,432 - #47 2
INFO  01:27:45,432 - #42 ]
INFO  01:27:45,433 - #7 )
INFO  01:27:45,433 - #7 )
INFO  01:27:45,433 - #5 ;
INFO  01:27:45,433 - #9 print
INFO  01:27:45,433 - #6 (
INFO  01:27:45,433 - #15 eol
INFO  01:27:45,433 - #7 )
INFO  01:27:45,433 - #5 ;
INFO  01:27:45,433 - #9 print
INFO  01:27:45,433 - #6 (
INFO  01:27:45,433 - #15 inkrement
INFO  01:27:45,433 - #6 (
INFO  01:27:45,433 - #15 niz
INFO  01:27:45,434 - #41 [
INFO  01:27:45,434 - #47 2
INFO  01:27:45,434 - #42 ]
INFO  01:27:45,434 - #8 ,
INFO  01:27:45,434 - #15 IncrementType
INFO  01:27:45,434 - #28 .
INFO  01:27:45,434 - #15 DOUBLE_VALUE
INFO  01:27:45,434 - #7 )
INFO  01:27:45,434 - #7 )
INFO  01:27:45,434 - #5 ;
INFO  01:27:45,434 - #4 }
INFO  01:27:45,434 - #4 }
INFO  01:27:45,553 - Generating bytecode file: C:\Users\Dusan\Desktop\micko\pp1lab.templateAST\workspace\MJCompiler\test\program.obj
INFO  01:27:45,570 - Parsiranje uspesno zavrseno!
