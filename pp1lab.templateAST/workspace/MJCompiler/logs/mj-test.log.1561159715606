INFO  01:28:22,709 - Compiling source file: C:\Users\Dusan\Desktop\micko\pp1lab.templateAST\workspace\MJCompiler\test\test2.mj
INFO  01:28:22,945 - #2 program
INFO  01:28:22,945 - #15 test2
INFO  01:28:22,946 - #40 enum
INFO  01:28:22,949 - #15 IncrementType
INFO  01:28:22,949 - #3 {
INFO  01:28:22,951 - #15 BY_ONE
INFO  01:28:22,952 - #8 ,
INFO  01:28:22,953 - #15 DOUBLE_VALUE
INFO  01:28:22,953 - #4 }
INFO  01:28:22,953 - #15 int
INFO  01:28:22,956 - #15 i
INFO  01:28:22,958 - #5 ;
INFO  01:28:22,962 - #15 bool
INFO  01:28:22,963 - #15 ibool
INFO  01:28:22,964 - #5 ;
INFO  01:28:22,964 - #15 int
INFO  01:28:22,964 - #15 niz
INFO  01:28:22,964 - #41 [
INFO  01:28:22,965 - #42 ]
INFO  01:28:22,965 - #5 ;
INFO  01:28:22,967 - #3 {
INFO  01:28:22,967 - #15 int
INFO  01:28:22,969 - #15 sum
INFO  01:28:22,970 - #6 (
INFO  01:28:22,970 - #15 int
INFO  01:28:22,970 - #15 z
INFO  01:28:22,971 - #8 ,
INFO  01:28:22,973 - #15 int
INFO  01:28:22,974 - #15 d
INFO  01:28:22,974 - #7 )
INFO  01:28:22,974 - #3 {
INFO  01:28:22,976 - #10 return
INFO  01:28:22,978 - #15 z
INFO  01:28:22,978 - #11 +
INFO  01:28:22,980 - #15 d
INFO  01:28:22,983 - #5 ;
INFO  01:28:22,984 - #4 }
INFO  01:28:22,985 - #15 int
INFO  01:28:22,988 - #15 inkrement
INFO  01:28:22,988 - #6 (
INFO  01:28:22,988 - #15 int
INFO  01:28:22,989 - #15 a
INFO  01:28:22,991 - #8 ,
INFO  01:28:22,991 - #15 IncrementType
INFO  01:28:22,991 - #15 type
INFO  01:28:22,991 - #7 )
INFO  01:28:22,991 - #15 int
INFO  01:28:22,991 - #15 pom
INFO  01:28:22,992 - #5 ;
INFO  01:28:22,992 - #3 {
INFO  01:28:22,992 - #16 if
INFO  01:28:22,992 - #6 (
INFO  01:28:22,993 - #15 type
INFO  01:28:22,993 - #29 ==
INFO  01:28:22,993 - #15 IncrementType
INFO  01:28:22,998 - #28 .
INFO  01:28:22,998 - #15 BY_ONE
INFO  01:28:22,998 - #7 )
INFO  01:28:23,001 - #15 pom
INFO  01:28:23,012 - #12 =
INFO  01:28:23,012 - #47 1
INFO  01:28:23,014 - #5 ;
INFO  01:28:23,016 - #17 else
INFO  01:28:23,017 - #16 if
INFO  01:28:23,019 - #6 (
INFO  01:28:23,020 - #15 type
INFO  01:28:23,020 - #29 ==
INFO  01:28:23,020 - #15 IncrementType
INFO  01:28:23,020 - #28 .
INFO  01:28:23,020 - #15 DOUBLE_VALUE
INFO  01:28:23,021 - #7 )
INFO  01:28:23,021 - #15 pom
INFO  01:28:23,021 - #12 =
INFO  01:28:23,021 - #15 a
INFO  01:28:23,021 - #5 ;
INFO  01:28:23,022 - #10 return
INFO  01:28:23,022 - #15 sum
INFO  01:28:23,023 - #6 (
INFO  01:28:23,023 - #15 a
INFO  01:28:23,023 - #8 ,
INFO  01:28:23,025 - #15 pom
INFO  01:28:23,025 - #7 )
INFO  01:28:23,026 - #5 ;
INFO  01:28:23,026 - #4 }
INFO  01:28:23,026 - #13 void
INFO  01:28:23,026 - #15 main
INFO  01:28:23,027 - #6 (
INFO  01:28:23,027 - #7 )
INFO  01:28:23,027 - #3 {
INFO  01:28:23,032 - #16 if
INFO  01:28:23,032 - #6 (
INFO  01:28:23,032 - #47 1
INFO  01:28:23,033 - #30 !=
INFO  01:28:23,033 - #47 1
INFO  01:28:23,035 - #7 )
INFO  01:28:23,036 - #9 print
INFO  01:28:23,037 - #6 (
INFO  01:28:23,037 - #26 -
INFO  01:28:23,038 - #47 6
INFO  01:28:23,038 - #7 )
INFO  01:28:23,039 - #5 ;
INFO  01:28:23,039 - #17 else
INFO  01:28:23,040 - #9 print
INFO  01:28:23,040 - #6 (
INFO  01:28:23,040 - #47 0
INFO  01:28:23,040 - #7 )
INFO  01:28:23,040 - #5 ;
INFO  01:28:23,041 - #15 ibool
INFO  01:28:23,041 - #12 =
INFO  01:28:23,041 - #49 false
INFO  01:28:23,041 - #5 ;
INFO  01:28:23,042 - #15 i
INFO  01:28:23,042 - #12 =
INFO  01:28:23,042 - #47 0
INFO  01:28:23,042 - #5 ;
INFO  01:28:23,042 - #18 for
INFO  01:28:23,043 - #6 (
INFO  01:28:23,043 - #15 i
INFO  01:28:23,043 - #12 =
INFO  01:28:23,043 - #47 0
INFO  01:28:23,044 - #5 ;
INFO  01:28:23,044 - #15 i
INFO  01:28:23,045 - #33 <
INFO  01:28:23,046 - #47 5
INFO  01:28:23,047 - #5 ;
INFO  01:28:23,047 - #15 i
INFO  01:28:23,048 - #22 ++
INFO  01:28:23,048 - #7 )
INFO  01:28:23,048 - #3 {
INFO  01:28:23,050 - #16 if
INFO  01:28:23,050 - #6 (
INFO  01:28:23,050 - #15 i
INFO  01:28:23,050 - #29 ==
INFO  01:28:23,050 - #47 2
INFO  01:28:23,051 - #7 )
INFO  01:28:23,051 - #15 ibool
INFO  01:28:23,051 - #12 =
INFO  01:28:23,051 - #49 true
INFO  01:28:23,051 - #5 ;
INFO  01:28:23,051 - #4 }
INFO  01:28:23,052 - #16 if
INFO  01:28:23,052 - #6 (
INFO  01:28:23,052 - #15 ibool
INFO  01:28:23,052 - #7 )
INFO  01:28:23,053 - #16 if
INFO  01:28:23,053 - #6 (
INFO  01:28:23,053 - #15 i
INFO  01:28:23,053 - #29 ==
INFO  01:28:23,053 - #47 5
INFO  01:28:23,053 - #7 )
INFO  01:28:23,053 - #9 print
INFO  01:28:23,054 - #6 (
INFO  01:28:23,054 - #47 1
INFO  01:28:23,054 - #7 )
INFO  01:28:23,054 - #5 ;
INFO  01:28:23,054 - #17 else
INFO  01:28:23,054 - #9 print
INFO  01:28:23,054 - #6 (
INFO  01:28:23,055 - #26 -
INFO  01:28:23,055 - #47 1
INFO  01:28:23,055 - #7 )
INFO  01:28:23,056 - #5 ;
INFO  01:28:23,056 - #15 niz
INFO  01:28:23,056 - #12 =
INFO  01:28:23,056 - #27 new
INFO  01:28:23,056 - #15 int
INFO  01:28:23,056 - #41 [
INFO  01:28:23,056 - #47 3
INFO  01:28:23,056 - #42 ]
INFO  01:28:23,056 - #3 {
INFO  01:28:23,058 - #47 1
INFO  01:28:23,060 - #8 ,
INFO  01:28:23,062 - #47 2
INFO  01:28:23,062 - #8 ,
INFO  01:28:23,062 - #47 3
INFO  01:28:23,062 - #4 }
INFO  01:28:23,062 - #5 ;
INFO  01:28:23,063 - #15 niz
INFO  01:28:23,063 - #41 [
INFO  01:28:23,064 - #47 2
INFO  01:28:23,064 - #42 ]
INFO  01:28:23,064 - #12 =
INFO  01:28:23,064 - #15 sum
INFO  01:28:23,065 - #6 (
INFO  01:28:23,065 - #15 niz
INFO  01:28:23,065 - #41 [
INFO  01:28:23,065 - #47 1
INFO  01:28:23,065 - #42 ]
INFO  01:28:23,065 - #8 ,
INFO  01:28:23,065 - #15 niz
INFO  01:28:23,066 - #41 [
INFO  01:28:23,066 - #47 0
INFO  01:28:23,066 - #42 ]
INFO  01:28:23,067 - #7 )
INFO  01:28:23,076 - #11 +
INFO  01:28:23,076 - #47 1
INFO  01:28:23,077 - #5 ;
INFO  01:28:23,077 - #16 if
INFO  01:28:23,078 - #6 (
INFO  01:28:23,078 - #15 niz
INFO  01:28:23,079 - #41 [
INFO  01:28:23,079 - #47 2
INFO  01:28:23,081 - #42 ]
INFO  01:28:23,081 - #29 ==
INFO  01:28:23,082 - #47 4
INFO  01:28:23,082 - #24 ||
INFO  01:28:23,083 - #47 4
INFO  01:28:23,086 - #29 ==
INFO  01:28:23,086 - #47 4
INFO  01:28:23,087 - #7 )
INFO  01:28:23,087 - #9 print
INFO  01:28:23,087 - #6 (
INFO  01:28:23,087 - #15 ord
INFO  01:28:23,087 - #6 (
INFO  01:28:23,088 - #48 A
INFO  01:28:23,088 - #7 )
INFO  01:28:23,088 - #7 )
INFO  01:28:23,088 - #5 ;
INFO  01:28:23,088 - #17 else
INFO  01:28:23,089 - #9 print
INFO  01:28:23,089 - #6 (
INFO  01:28:23,089 - #15 ord
INFO  01:28:23,089 - #6 (
INFO  01:28:23,089 - #48 a
INFO  01:28:23,089 - #7 )
INFO  01:28:23,089 - #7 )
INFO  01:28:23,090 - #5 ;
INFO  01:28:23,090 - #9 print
INFO  01:28:23,090 - #6 (
INFO  01:28:23,090 - #15 eol
INFO  01:28:23,090 - #7 )
INFO  01:28:23,090 - #5 ;
INFO  01:28:23,090 - #15 i
INFO  01:28:23,090 - #12 =
INFO  01:28:23,091 - #47 0
INFO  01:28:23,091 - #5 ;
INFO  01:28:23,091 - #18 for
INFO  01:28:23,091 - #6 (
INFO  01:28:23,091 - #5 ;
INFO  01:28:23,093 - #15 i
INFO  01:28:23,093 - #33 <
INFO  01:28:23,093 - #47 10
INFO  01:28:23,093 - #5 ;
INFO  01:28:23,094 - #7 )
INFO  01:28:23,094 - #3 {
INFO  01:28:23,094 - #16 if
INFO  01:28:23,094 - #6 (
INFO  01:28:23,094 - #15 i
INFO  01:28:23,094 - #29 ==
INFO  01:28:23,094 - #47 3
INFO  01:28:23,094 - #7 )
INFO  01:28:23,094 - #3 {
INFO  01:28:23,094 - #15 i
INFO  01:28:23,095 - #22 ++
INFO  01:28:23,095 - #5 ;
INFO  01:28:23,095 - #20 continue
INFO  01:28:23,095 - #5 ;
INFO  01:28:23,096 - #4 }
INFO  01:28:23,098 - #16 if
INFO  01:28:23,098 - #6 (
INFO  01:28:23,098 - #15 i
INFO  01:28:23,098 - #29 ==
INFO  01:28:23,098 - #47 4
INFO  01:28:23,099 - #7 )
INFO  01:28:23,099 - #19 break
INFO  01:28:23,099 - #5 ;
INFO  01:28:23,099 - #15 i
INFO  01:28:23,100 - #12 =
INFO  01:28:23,100 - #15 inkrement
INFO  01:28:23,101 - #6 (
INFO  01:28:23,101 - #15 i
INFO  01:28:23,101 - #8 ,
INFO  01:28:23,101 - #15 IncrementType
INFO  01:28:23,101 - #28 .
INFO  01:28:23,102 - #15 BY_ONE
INFO  01:28:23,102 - #7 )
INFO  01:28:23,102 - #5 ;
INFO  01:28:23,102 - #4 }
INFO  01:28:23,102 - #16 if
INFO  01:28:23,103 - #6 (
INFO  01:28:23,103 - #15 i
INFO  01:28:23,103 - #29 ==
INFO  01:28:23,103 - #47 3
INFO  01:28:23,103 - #7 )
INFO  01:28:23,103 - #9 print
INFO  01:28:23,103 - #6 (
INFO  01:28:23,103 - #47 4
INFO  01:28:23,103 - #7 )
INFO  01:28:23,103 - #5 ;
INFO  01:28:23,103 - #17 else
INFO  01:28:23,104 - #9 print
INFO  01:28:23,104 - #6 (
INFO  01:28:23,104 - #26 -
INFO  01:28:23,104 - #47 4
INFO  01:28:23,104 - #7 )
INFO  01:28:23,104 - #5 ;
INFO  01:28:23,104 - #21 read
INFO  01:28:23,104 - #6 (
INFO  01:28:23,104 - #15 niz
INFO  01:28:23,104 - #41 [
INFO  01:28:23,104 - #47 0
INFO  01:28:23,104 - #42 ]
INFO  01:28:23,105 - #7 )
INFO  01:28:23,105 - #5 ;
INFO  01:28:23,105 - #21 read
INFO  01:28:23,105 - #6 (
INFO  01:28:23,105 - #15 niz
INFO  01:28:23,105 - #41 [
INFO  01:28:23,106 - #47 1
INFO  01:28:23,106 - #42 ]
INFO  01:28:23,106 - #7 )
INFO  01:28:23,106 - #5 ;
INFO  01:28:23,106 - #21 read
INFO  01:28:23,106 - #6 (
INFO  01:28:23,106 - #15 niz
INFO  01:28:23,106 - #41 [
INFO  01:28:23,106 - #47 2
INFO  01:28:23,106 - #42 ]
INFO  01:28:23,107 - #7 )
INFO  01:28:23,107 - #5 ;
INFO  01:28:23,107 - #9 print
INFO  01:28:23,107 - #6 (
INFO  01:28:23,107 - #15 eol
INFO  01:28:23,107 - #7 )
INFO  01:28:23,108 - #5 ;
INFO  01:28:23,108 - #9 print
INFO  01:28:23,108 - #6 (
INFO  01:28:23,108 - #15 sum
INFO  01:28:23,108 - #6 (
INFO  01:28:23,108 - #15 sum
INFO  01:28:23,108 - #6 (
INFO  01:28:23,108 - #15 niz
INFO  01:28:23,108 - #41 [
INFO  01:28:23,108 - #47 0
INFO  01:28:23,108 - #42 ]
INFO  01:28:23,109 - #8 ,
INFO  01:28:23,109 - #15 niz
INFO  01:28:23,109 - #41 [
INFO  01:28:23,109 - #47 1
INFO  01:28:23,109 - #42 ]
INFO  01:28:23,109 - #7 )
INFO  01:28:23,109 - #8 ,
INFO  01:28:23,109 - #15 niz
INFO  01:28:23,109 - #41 [
INFO  01:28:23,109 - #47 2
INFO  01:28:23,109 - #42 ]
INFO  01:28:23,110 - #7 )
INFO  01:28:23,110 - #7 )
INFO  01:28:23,110 - #5 ;
INFO  01:28:23,110 - #9 print
INFO  01:28:23,110 - #6 (
INFO  01:28:23,110 - #15 eol
INFO  01:28:23,111 - #7 )
INFO  01:28:23,111 - #5 ;
INFO  01:28:23,111 - #9 print
INFO  01:28:23,111 - #6 (
INFO  01:28:23,111 - #15 inkrement
INFO  01:28:23,111 - #6 (
INFO  01:28:23,111 - #15 niz
INFO  01:28:23,111 - #41 [
INFO  01:28:23,112 - #47 2
INFO  01:28:23,112 - #42 ]
INFO  01:28:23,112 - #8 ,
INFO  01:28:23,112 - #15 IncrementType
INFO  01:28:23,112 - #28 .
INFO  01:28:23,112 - #15 DOUBLE_VALUE
INFO  01:28:23,112 - #7 )
INFO  01:28:23,112 - #7 )
INFO  01:28:23,112 - #5 ;
INFO  01:28:23,113 - #4 }
INFO  01:28:23,113 - #4 }
INFO  01:28:23,215 - Generating bytecode file: C:\Users\Dusan\Desktop\micko\pp1lab.templateAST\workspace\MJCompiler\test\program.obj
INFO  01:28:23,234 - Parsiranje uspesno zavrseno!
