INFO  00:42:42,198 - Compiling source file: C:\Users\Dusan\Desktop\micko\pp1lab.templateAST\workspace\MJCompiler\test\test3.mj
INFO  00:42:42,366 - #2 program
INFO  00:42:42,366 - #15 test2
INFO  00:42:42,366 - #40 enum
INFO  00:42:42,369 - #15 IncrementType
INFO  00:42:42,369 - #3 {
INFO  00:42:42,370 - #15 BY_ONE
INFO  00:42:42,370 - #8 ,
INFO  00:42:42,370 - #15 DOUBLE_VALUE
INFO  00:42:42,370 - #8 ,
INFO  00:42:42,371 - #15 BY_ONE
INFO  00:42:42,371 - #4 }
INFO  00:42:42,371 - #15 int
INFO  00:42:42,374 - #15 i
INFO  00:42:42,376 - #5 ;
INFO  00:42:42,379 - #15 bool
INFO  00:42:42,380 - #15 ibool
INFO  00:42:42,380 - #5 ;
INFO  00:42:42,380 - #15 int
INFO  00:42:42,380 - #15 niz
INFO  00:42:42,380 - #41 [
INFO  00:42:42,381 - #42 ]
INFO  00:42:42,381 - #5 ;
INFO  00:42:42,382 - #15 char
INFO  00:42:42,382 - #15 niz2
INFO  00:42:42,382 - #41 [
INFO  00:42:42,382 - #42 ]
INFO  00:42:42,382 - #5 ;
INFO  00:42:42,383 - #3 {
INFO  00:42:42,383 - #15 int
INFO  00:42:42,384 - #15 sum
INFO  00:42:42,384 - #6 (
INFO  00:42:42,384 - #15 int
INFO  00:42:42,384 - #15 z
INFO  00:42:42,384 - #8 ,
INFO  00:42:42,386 - #15 int
INFO  00:42:42,386 - #15 d
INFO  00:42:42,386 - #7 )
INFO  00:42:42,386 - #3 {
INFO  00:42:42,387 - #10 return
INFO  00:42:42,388 - #49 true
INFO  00:42:42,389 - #5 ;
INFO  00:42:42,390 - #4 }
INFO  00:42:42,391 - #15 int
INFO  00:42:42,393 - #15 inkrement
INFO  00:42:42,393 - #6 (
INFO  00:42:42,393 - #15 int
INFO  00:42:42,393 - #15 a
INFO  00:42:42,393 - #8 ,
INFO  00:42:42,394 - #15 IncrementType
INFO  00:42:42,394 - #15 type
INFO  00:42:42,394 - #7 )
INFO  00:42:42,394 - #15 int
INFO  00:42:42,394 - #15 pom
INFO  00:42:42,394 - #5 ;
INFO  00:42:42,394 - #3 {
INFO  00:42:42,395 - #16 if
INFO  00:42:42,395 - #6 (
INFO  00:42:42,395 - #15 type
INFO  00:42:42,395 - #29 ==
INFO  00:42:42,402 - #15 IncrementType
INFO  00:42:42,406 - #28 .
INFO  00:42:42,406 - #15 BY_ONE
INFO  00:42:42,407 - #7 )
INFO  00:42:42,411 - #15 pom
INFO  00:42:42,411 - #12 =
INFO  00:42:42,411 - #47 1
INFO  00:42:42,413 - #5 ;
INFO  00:42:42,413 - #17 else
INFO  00:42:42,413 - #16 if
INFO  00:42:42,415 - #6 (
INFO  00:42:42,415 - #15 type
INFO  00:42:42,415 - #29 ==
INFO  00:42:42,415 - #15 IncrementType
INFO  00:42:42,415 - #28 .
INFO  00:42:42,415 - #15 DOUBLE_VALUE
INFO  00:42:42,416 - #7 )
INFO  00:42:42,416 - #15 pom
INFO  00:42:42,416 - #12 =
INFO  00:42:42,416 - #15 a
INFO  00:42:42,416 - #5 ;
INFO  00:42:42,416 - #10 return
INFO  00:42:42,417 - #15 sum
INFO  00:42:42,417 - #6 (
INFO  00:42:42,418 - #15 a
INFO  00:42:42,418 - #8 ,
INFO  00:42:42,420 - #15 pom
INFO  00:42:42,421 - #7 )
INFO  00:42:42,421 - #5 ;
INFO  00:42:42,422 - #4 }
INFO  00:42:42,422 - #13 void
INFO  00:42:42,422 - #15 main
INFO  00:42:42,422 - #6 (
INFO  00:42:42,423 - #7 )
INFO  00:42:42,423 - #3 {
INFO  00:42:42,425 - #16 if
INFO  00:42:42,425 - #6 (
INFO  00:42:42,425 - #47 1
INFO  00:42:42,426 - #30 !=
INFO  00:42:42,427 - #47 1
INFO  00:42:42,428 - #7 )
INFO  00:42:42,429 - #9 print
INFO  00:42:42,429 - #6 (
INFO  00:42:42,429 - #26 -
INFO  00:42:42,430 - #47 6
INFO  00:42:42,430 - #7 )
INFO  00:42:42,430 - #5 ;
INFO  00:42:42,431 - #17 else
INFO  00:42:42,431 - #9 print
INFO  00:42:42,432 - #6 (
INFO  00:42:42,432 - #47 0
INFO  00:42:42,432 - #7 )
INFO  00:42:42,432 - #5 ;
INFO  00:42:42,432 - #15 ibool
INFO  00:42:42,432 - #12 =
INFO  00:42:42,433 - #49 false
INFO  00:42:42,433 - #5 ;
INFO  00:42:42,433 - #15 i
INFO  00:42:42,433 - #12 =
INFO  00:42:42,433 - #47 0
INFO  00:42:42,434 - #5 ;
INFO  00:42:42,434 - #18 for
INFO  00:42:42,434 - #6 (
INFO  00:42:42,434 - #15 i
INFO  00:42:42,434 - #12 =
INFO  00:42:42,434 - #47 0
INFO  00:42:42,435 - #5 ;
INFO  00:42:42,435 - #15 i
INFO  00:42:42,437 - #33 <
INFO  00:42:42,437 - #47 5
INFO  00:42:42,440 - #5 ;
INFO  00:42:42,441 - #15 i
INFO  00:42:42,441 - #22 ++
INFO  00:42:42,442 - #7 )
INFO  00:42:42,442 - #3 {
INFO  00:42:42,443 - #16 if
INFO  00:42:42,444 - #6 (
INFO  00:42:42,444 - #15 i
INFO  00:42:42,444 - #29 ==
INFO  00:42:42,444 - #47 2
INFO  00:42:42,444 - #7 )
INFO  00:42:42,444 - #15 ibool
INFO  00:42:42,444 - #12 =
INFO  00:42:42,445 - #49 true
INFO  00:42:42,445 - #5 ;
INFO  00:42:42,445 - #4 }
INFO  00:42:42,445 - #16 if
INFO  00:42:42,446 - #6 (
INFO  00:42:42,446 - #15 ibool
INFO  00:42:42,446 - #7 )
INFO  00:42:42,446 - #16 if
INFO  00:42:42,446 - #6 (
INFO  00:42:42,446 - #15 i
INFO  00:42:42,446 - #29 ==
INFO  00:42:42,447 - #47 5
INFO  00:42:42,447 - #7 )
INFO  00:42:42,447 - #9 print
INFO  00:42:42,447 - #6 (
INFO  00:42:42,447 - #47 1
INFO  00:42:42,447 - #7 )
INFO  00:42:42,447 - #5 ;
INFO  00:42:42,448 - #17 else
INFO  00:42:42,448 - #9 print
INFO  00:42:42,448 - #6 (
INFO  00:42:42,448 - #26 -
INFO  00:42:42,448 - #47 1
INFO  00:42:42,448 - #7 )
INFO  00:42:42,448 - #5 ;
INFO  00:42:42,448 - #15 niz
INFO  00:42:42,449 - #12 =
INFO  00:42:42,449 - #27 new
INFO  00:42:42,449 - #15 int
INFO  00:42:42,449 - #41 [
INFO  00:42:42,449 - #47 3
INFO  00:42:42,449 - #42 ]
INFO  00:42:42,449 - #3 {
INFO  00:42:42,450 - #47 1
INFO  00:42:42,451 - #8 ,
INFO  00:42:42,453 - #47 2
INFO  00:42:42,453 - #4 }
INFO  00:42:42,454 - #5 ;
INFO  00:42:42,454 - #15 niz2
INFO  00:42:42,457 - #12 =
INFO  00:42:42,457 - #27 new
INFO  00:42:42,457 - #15 char
INFO  00:42:42,457 - #41 [
INFO  00:42:42,457 - #47 3
INFO  00:42:42,458 - #42 ]
INFO  00:42:42,458 - #3 {
INFO  00:42:42,458 - #48 a
INFO  00:42:42,458 - #8 ,
INFO  00:42:42,458 - #47 1
INFO  00:42:42,459 - #8 ,
INFO  00:42:42,459 - #48 c
INFO  00:42:42,459 - #4 }
INFO  00:42:42,459 - #5 ;
INFO  00:42:42,459 - #9 print
INFO  00:42:42,459 - #6 (
INFO  00:42:42,460 - #15 eol
INFO  00:42:42,460 - #7 )
INFO  00:42:42,460 - #5 ;
INFO  00:42:42,460 - #15 i
INFO  00:42:42,460 - #12 =
INFO  00:42:42,460 - #47 0
INFO  00:42:42,460 - #5 ;
INFO  00:42:42,460 - #15 i
INFO  00:42:42,460 - #12 =
INFO  00:42:42,460 - #15 inkrement
INFO  00:42:42,460 - #6 (
INFO  00:42:42,461 - #15 i
INFO  00:42:42,461 - #8 ,
INFO  00:42:42,461 - #49 true
INFO  00:42:42,461 - #7 )
INFO  00:42:42,461 - #5 ;
INFO  00:42:42,461 - #4 }
INFO  00:42:42,461 - #4 }
ERROR 00:42:42,531 - Parsiranje NIJE uspesno zavrseno!
