INFO  00:34:41,289 - Compiling source file: C:\Users\Dusan\Desktop\micko\pp1lab.templateAST\workspace\MJCompiler\test\test3.mj
INFO  00:34:41,519 - #2 program
INFO  00:34:41,519 - #15 test2
INFO  00:34:41,519 - #40 enum
INFO  00:34:41,524 - #15 IncrementType
INFO  00:34:41,524 - #3 {
INFO  00:34:41,525 - #15 BY_ONE
INFO  00:34:41,525 - #8 ,
INFO  00:34:41,526 - #15 DOUBLE_VALUE
INFO  00:34:41,526 - #8 ,
INFO  00:34:41,526 - #15 BY_ONE
INFO  00:34:41,527 - #4 }
INFO  00:34:41,527 - #15 int
INFO  00:34:41,528 - #15 i
INFO  00:34:41,530 - #5 ;
INFO  00:34:41,534 - #15 bool
INFO  00:34:41,535 - #15 ibool
INFO  00:34:41,535 - #5 ;
INFO  00:34:41,536 - #15 int
INFO  00:34:41,536 - #15 niz
INFO  00:34:41,537 - #41 [
INFO  00:34:41,537 - #42 ]
INFO  00:34:41,537 - #5 ;
INFO  00:34:41,539 - #15 char
INFO  00:34:41,539 - #15 niz2
INFO  00:34:41,539 - #41 [
INFO  00:34:41,539 - #42 ]
INFO  00:34:41,539 - #5 ;
INFO  00:34:41,540 - #3 {
INFO  00:34:41,540 - #15 int
INFO  00:34:41,542 - #15 sum
INFO  00:34:41,542 - #6 (
INFO  00:34:41,542 - #15 int
INFO  00:34:41,542 - #15 z
INFO  00:34:41,543 - #8 ,
INFO  00:34:41,544 - #15 int
INFO  00:34:41,545 - #15 d
INFO  00:34:41,545 - #7 )
INFO  00:34:41,545 - #3 {
INFO  00:34:41,547 - #10 return
INFO  00:34:41,548 - #49 true
INFO  00:34:41,548 - #5 ;
INFO  00:34:41,549 - #4 }
INFO  00:34:41,550 - #15 int
INFO  00:34:41,552 - #15 inkrement
INFO  00:34:41,552 - #6 (
INFO  00:34:41,552 - #15 int
INFO  00:34:41,552 - #15 a
INFO  00:34:41,553 - #8 ,
INFO  00:34:41,554 - #15 IncrementType
INFO  00:34:41,554 - #15 type
INFO  00:34:41,554 - #7 )
INFO  00:34:41,554 - #15 int
INFO  00:34:41,555 - #15 pom
INFO  00:34:41,555 - #5 ;
INFO  00:34:41,555 - #3 {
INFO  00:34:41,556 - #16 if
INFO  00:34:41,556 - #6 (
INFO  00:34:41,556 - #15 type
INFO  00:34:41,556 - #29 ==
INFO  00:34:41,563 - #15 IncrementType
INFO  00:34:41,566 - #28 .
INFO  00:34:41,566 - #15 BY_ONE
INFO  00:34:41,566 - #7 )
INFO  00:34:41,569 - #15 pom
INFO  00:34:41,569 - #12 =
INFO  00:34:41,571 - #47 1
INFO  00:34:41,574 - #5 ;
INFO  00:34:41,574 - #17 else
INFO  00:34:41,575 - #16 if
INFO  00:34:41,577 - #6 (
INFO  00:34:41,577 - #15 type
INFO  00:34:41,577 - #29 ==
INFO  00:34:41,577 - #15 IncrementType
INFO  00:34:41,577 - #28 .
INFO  00:34:41,578 - #15 DOUBLE_VALUE
INFO  00:34:41,578 - #7 )
INFO  00:34:41,578 - #15 pom
INFO  00:34:41,578 - #12 =
INFO  00:34:41,578 - #15 a
INFO  00:34:41,578 - #5 ;
INFO  00:34:41,579 - #10 return
INFO  00:34:41,580 - #15 sum
INFO  00:34:41,580 - #6 (
INFO  00:34:41,580 - #15 a
INFO  00:34:41,580 - #8 ,
INFO  00:34:41,582 - #15 pom
INFO  00:34:41,582 - #7 )
INFO  00:34:41,583 - #5 ;
INFO  00:34:41,583 - #4 }
INFO  00:34:41,583 - #13 void
INFO  00:34:41,583 - #15 main
INFO  00:34:41,583 - #6 (
INFO  00:34:41,584 - #7 )
INFO  00:34:41,584 - #3 {
INFO  00:34:41,585 - #16 if
INFO  00:34:41,585 - #6 (
INFO  00:34:41,585 - #47 1
INFO  00:34:41,586 - #30 !=
INFO  00:34:41,586 - #47 1
INFO  00:34:41,590 - #7 )
INFO  00:34:41,590 - #9 print
INFO  00:34:41,590 - #6 (
INFO  00:34:41,590 - #26 -
INFO  00:34:41,590 - #47 6
INFO  00:34:41,591 - #7 )
INFO  00:34:41,591 - #5 ;
INFO  00:34:41,591 - #17 else
INFO  00:34:41,591 - #9 print
INFO  00:34:41,592 - #6 (
INFO  00:34:41,592 - #47 0
INFO  00:34:41,592 - #7 )
INFO  00:34:41,592 - #5 ;
INFO  00:34:41,592 - #15 ibool
INFO  00:34:41,593 - #12 =
INFO  00:34:41,593 - #49 false
INFO  00:34:41,593 - #5 ;
INFO  00:34:41,593 - #15 i
INFO  00:34:41,593 - #12 =
INFO  00:34:41,594 - #47 0
INFO  00:34:41,594 - #5 ;
INFO  00:34:41,594 - #18 for
INFO  00:34:41,594 - #6 (
INFO  00:34:41,594 - #15 i
INFO  00:34:41,594 - #12 =
INFO  00:34:41,594 - #47 0
INFO  00:34:41,595 - #5 ;
INFO  00:34:41,595 - #15 i
INFO  00:34:41,596 - #33 <
INFO  00:34:41,597 - #47 5
INFO  00:34:41,598 - #5 ;
INFO  00:34:41,598 - #15 i
INFO  00:34:41,599 - #22 ++
INFO  00:34:41,599 - #7 )
INFO  00:34:41,599 - #3 {
INFO  00:34:41,600 - #16 if
INFO  00:34:41,600 - #6 (
INFO  00:34:41,601 - #15 i
INFO  00:34:41,601 - #29 ==
INFO  00:34:41,601 - #47 2
INFO  00:34:41,601 - #7 )
INFO  00:34:41,601 - #15 ibool
INFO  00:34:41,601 - #12 =
INFO  00:34:41,601 - #49 true
INFO  00:34:41,601 - #5 ;
INFO  00:34:41,602 - #4 }
INFO  00:34:41,602 - #16 if
INFO  00:34:41,604 - #6 (
INFO  00:34:41,604 - #15 ibool
INFO  00:34:41,604 - #7 )
INFO  00:34:41,604 - #16 if
INFO  00:34:41,605 - #6 (
INFO  00:34:41,605 - #15 i
INFO  00:34:41,605 - #29 ==
INFO  00:34:41,605 - #47 5
INFO  00:34:41,605 - #7 )
INFO  00:34:41,605 - #9 print
INFO  00:34:41,606 - #6 (
INFO  00:34:41,606 - #47 1
INFO  00:34:41,606 - #7 )
INFO  00:34:41,606 - #5 ;
INFO  00:34:41,606 - #17 else
INFO  00:34:41,606 - #9 print
INFO  00:34:41,606 - #6 (
INFO  00:34:41,606 - #26 -
INFO  00:34:41,607 - #47 1
INFO  00:34:41,607 - #7 )
INFO  00:34:41,607 - #5 ;
INFO  00:34:41,607 - #15 niz
INFO  00:34:41,607 - #12 =
INFO  00:34:41,607 - #27 new
INFO  00:34:41,607 - #15 int
INFO  00:34:41,607 - #41 [
INFO  00:34:41,608 - #47 3
INFO  00:34:41,608 - #42 ]
INFO  00:34:41,608 - #3 {
INFO  00:34:41,609 - #47 1
INFO  00:34:41,610 - #8 ,
INFO  00:34:41,612 - #47 2
INFO  00:34:41,612 - #4 }
INFO  00:34:41,612 - #5 ;
INFO  00:34:41,612 - #15 niz2
INFO  00:34:41,612 - #12 =
INFO  00:34:41,613 - #27 new
INFO  00:34:41,613 - #15 char
INFO  00:34:41,613 - #41 [
INFO  00:34:41,613 - #47 3
INFO  00:34:41,613 - #42 ]
INFO  00:34:41,613 - #3 {
INFO  00:34:41,613 - #48 a
INFO  00:34:41,613 - #8 ,
INFO  00:34:41,614 - #47 1
INFO  00:34:41,614 - #8 ,
INFO  00:34:41,614 - #48 c
INFO  00:34:41,614 - #4 }
INFO  00:34:41,614 - #5 ;
INFO  00:34:41,614 - #9 print
INFO  00:34:41,614 - #6 (
INFO  00:34:41,614 - #15 eol
INFO  00:34:41,614 - #7 )
INFO  00:34:41,614 - #5 ;
INFO  00:34:41,614 - #15 i
INFO  00:34:41,615 - #12 =
INFO  00:34:41,615 - #47 0
INFO  00:34:41,615 - #5 ;
INFO  00:34:41,615 - #15 i
INFO  00:34:41,615 - #12 =
INFO  00:34:41,615 - #15 inkrement
INFO  00:34:41,615 - #6 (
INFO  00:34:41,615 - #15 i
INFO  00:34:41,615 - #8 ,
INFO  00:34:41,615 - #49 true
INFO  00:34:41,615 - #7 )
INFO  00:34:41,615 - #5 ;
INFO  00:34:41,615 - #4 }
INFO  00:34:41,615 - #4 }
ERROR 00:34:41,675 - Imena i vrednosti clanova nabrajanja moraju biti jedinstveni!: BY_ONE na liniji 4
ERROR 00:34:41,676 - Greska na liniji 15 : tip izraza u return naredbi ne slaze se sa tipom povratne vrednosti funkcije sum
INFO  00:34:41,677 - Koristi se formalni parametar funkcije Var type: int, 1, 1  na liniji 20
INFO  00:34:41,677 - Koristi se lokalna promenljiva Var pom: int, 2, 1  na liniji 20
INFO  00:34:41,677 - Koristi se formalni parametar funkcije Var type: int, 1, 1  na liniji 21
INFO  00:34:41,677 - Koristi se lokalna promenljiva Var pom: int, 2, 1  na liniji 21
INFO  00:34:41,677 - Koristi se formalni parametar funkcije Var a: int, 0, 1  na liniji 21
INFO  00:34:41,678 - Koristi se formalni parametar funkcije Var a: int, 0, 1  na liniji 23
INFO  00:34:41,678 - Koristi se lokalna promenljiva Var pom: int, 2, 1  na liniji 23
INFO  00:34:41,679 - Poziva se funkcija Meth sum: int, 0, 2 
   Var z: int, 0, 1 
   Var d: int, 1, 1 
 na liniji 23
INFO  00:34:41,680 - Koristi se globalna promenljiva Var ibool: , 1, 0  na liniji 31
INFO  00:34:41,680 - Koristi se globalna promenljiva Var i: int, 0, 0  na liniji 32
INFO  00:34:41,680 - Koristi se globalna promenljiva Var i: int, 0, 0  na liniji 33
INFO  00:34:41,680 - Koristi se globalna promenljiva Var i: int, 0, 0  na liniji 33
INFO  00:34:41,680 - Koristi se globalna promenljiva Var i: int, 0, 0  na liniji 33
INFO  00:34:41,681 - Koristi se globalna promenljiva Var i: int, 0, 0  na liniji 35
INFO  00:34:41,681 - Koristi se globalna promenljiva Var ibool: , 1, 0  na liniji 35
INFO  00:34:41,681 - Koristi se globalna promenljiva Var ibool: , 1, 0  na liniji 38
INFO  00:34:41,682 - Koristi se globalna promenljiva Var i: int, 0, 0  na liniji 39
INFO  00:34:41,682 - Koristi se globalna promenljiva Var niz: Arr of int, 2, 0  na liniji 42
ERROR 00:34:41,683 - Greska na liniji 42 : broj elemenata niza mora odgovarati njegovoj velicini
INFO  00:34:41,683 - Koristi se globalna promenljiva Var niz2: Arr of char, 3, 0  na liniji 44
ERROR 00:34:41,683 - Greska na liniji 44 : tipovi niza i njegovih elemenata moraju biti isti.
INFO  00:34:41,684 - Koristi se konstanta Con eol: char, 10, 0  na liniji 47
INFO  00:34:41,684 - Koristi se globalna promenljiva Var i: int, 0, 0  na liniji 49
INFO  00:34:41,685 - Koristi se globalna promenljiva Var i: int, 0, 0  na liniji 50
INFO  00:34:41,685 - Koristi se globalna promenljiva Var i: int, 0, 0  na liniji 50
INFO  00:34:41,685 - Poziva se funkcija Meth inkrement: int, 0, 2 
   Var a: int, 0, 1 
   Var type: int, 1, 1 
   Var pom: int, 2, 1 
 na liniji 50
ERROR 00:34:41,688 - Greska na liniji 50 : nekompatibilni tipovi stvarnih i formalnih argumenata type, metode inkrement! 
ERROR 00:34:41,689 - Parsiranje NIJE uspesno zavrseno!
