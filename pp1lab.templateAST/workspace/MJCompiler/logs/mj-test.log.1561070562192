INFO  00:41:39,992 - Compiling source file: C:\Users\Dusan\Desktop\micko\pp1lab.templateAST\workspace\MJCompiler\test\test3.mj
INFO  00:41:40,247 - #2 program
INFO  00:41:40,247 - #15 test2
INFO  00:41:40,247 - #40 enum
INFO  00:41:40,250 - #15 IncrementType
INFO  00:41:40,250 - #3 {
INFO  00:41:40,251 - #15 BY_ONE
INFO  00:41:40,251 - #8 ,
INFO  00:41:40,251 - #15 DOUBLE_VALUE
INFO  00:41:40,252 - #8 ,
INFO  00:41:40,252 - #15 BY_ONE
INFO  00:41:40,253 - #4 }
INFO  00:41:40,253 - #15 int
INFO  00:41:40,256 - #15 i
INFO  00:41:40,258 - #5 ;
INFO  00:41:40,263 - #15 bool
INFO  00:41:40,265 - #15 ibool
INFO  00:41:40,265 - #5 ;
INFO  00:41:40,266 - #15 int
INFO  00:41:40,266 - #15 niz
INFO  00:41:40,267 - #41 [
INFO  00:41:40,268 - #42 ]
INFO  00:41:40,269 - #5 ;
INFO  00:41:40,271 - #15 char
INFO  00:41:40,271 - #15 niz2
INFO  00:41:40,271 - #41 [
INFO  00:41:40,271 - #42 ]
INFO  00:41:40,271 - #5 ;
INFO  00:41:40,271 - #3 {
INFO  00:41:40,271 - #15 int
INFO  00:41:40,272 - #15 sum
INFO  00:41:40,272 - #6 (
INFO  00:41:40,273 - #15 int
INFO  00:41:40,273 - #15 z
INFO  00:41:40,273 - #8 ,
INFO  00:41:40,274 - #15 int
INFO  00:41:40,274 - #15 d
INFO  00:41:40,274 - #7 )
INFO  00:41:40,275 - #3 {
INFO  00:41:40,276 - #10 return
INFO  00:41:40,277 - #49 true
INFO  00:41:40,277 - #5 ;
INFO  00:41:40,277 - #4 }
INFO  00:41:40,279 - #15 int
INFO  00:41:40,281 - #15 inkrement
INFO  00:41:40,281 - #6 (
INFO  00:41:40,281 - #15 int
INFO  00:41:40,282 - #15 a
INFO  00:41:40,282 - #8 ,
INFO  00:41:40,282 - #15 IncrementType
INFO  00:41:40,282 - #15 type
INFO  00:41:40,282 - #7 )
INFO  00:41:40,282 - #15 int
INFO  00:41:40,282 - #15 pom
INFO  00:41:40,282 - #5 ;
INFO  00:41:40,282 - #3 {
INFO  00:41:40,283 - #16 if
INFO  00:41:40,283 - #6 (
INFO  00:41:40,283 - #15 type
INFO  00:41:40,283 - #29 ==
INFO  00:41:40,291 - #15 IncrementType
INFO  00:41:40,293 - #28 .
INFO  00:41:40,294 - #15 BY_ONE
INFO  00:41:40,294 - #7 )
INFO  00:41:40,296 - #15 pom
INFO  00:41:40,296 - #12 =
INFO  00:41:40,296 - #47 1
INFO  00:41:40,297 - #5 ;
INFO  00:41:40,303 - #17 else
INFO  00:41:40,305 - #16 if
INFO  00:41:40,307 - #6 (
INFO  00:41:40,307 - #15 type
INFO  00:41:40,307 - #29 ==
INFO  00:41:40,307 - #15 IncrementType
INFO  00:41:40,307 - #28 .
INFO  00:41:40,308 - #15 DOUBLE_VALUE
INFO  00:41:40,308 - #7 )
INFO  00:41:40,308 - #15 pom
INFO  00:41:40,309 - #12 =
INFO  00:41:40,309 - #15 a
INFO  00:41:40,309 - #5 ;
INFO  00:41:40,310 - #10 return
INFO  00:41:40,313 - #15 sum
INFO  00:41:40,313 - #6 (
INFO  00:41:40,314 - #15 a
INFO  00:41:40,314 - #8 ,
INFO  00:41:40,317 - #15 pom
INFO  00:41:40,317 - #7 )
INFO  00:41:40,319 - #5 ;
INFO  00:41:40,320 - #4 }
INFO  00:41:40,320 - #13 void
INFO  00:41:40,320 - #15 main
INFO  00:41:40,321 - #6 (
INFO  00:41:40,321 - #7 )
INFO  00:41:40,321 - #3 {
INFO  00:41:40,323 - #16 if
INFO  00:41:40,323 - #6 (
INFO  00:41:40,323 - #47 1
INFO  00:41:40,324 - #30 !=
INFO  00:41:40,324 - #47 1
INFO  00:41:40,325 - #7 )
INFO  00:41:40,325 - #9 print
INFO  00:41:40,326 - #6 (
INFO  00:41:40,326 - #26 -
INFO  00:41:40,326 - #47 6
INFO  00:41:40,326 - #7 )
INFO  00:41:40,327 - #5 ;
INFO  00:41:40,327 - #17 else
INFO  00:41:40,327 - #9 print
INFO  00:41:40,327 - #6 (
INFO  00:41:40,327 - #47 0
INFO  00:41:40,328 - #7 )
INFO  00:41:40,328 - #5 ;
INFO  00:41:40,328 - #15 ibool
INFO  00:41:40,328 - #12 =
INFO  00:41:40,328 - #49 false
INFO  00:41:40,329 - #5 ;
INFO  00:41:40,329 - #15 i
INFO  00:41:40,329 - #12 =
INFO  00:41:40,329 - #47 0
INFO  00:41:40,329 - #5 ;
INFO  00:41:40,329 - #18 for
INFO  00:41:40,330 - #6 (
INFO  00:41:40,330 - #15 i
INFO  00:41:40,330 - #12 =
INFO  00:41:40,330 - #47 0
INFO  00:41:40,330 - #5 ;
INFO  00:41:40,331 - #15 i
INFO  00:41:40,333 - #33 <
INFO  00:41:40,333 - #47 5
INFO  00:41:40,336 - #5 ;
INFO  00:41:40,336 - #15 i
INFO  00:41:40,337 - #22 ++
INFO  00:41:40,337 - #7 )
INFO  00:41:40,337 - #3 {
INFO  00:41:40,339 - #16 if
INFO  00:41:40,340 - #6 (
INFO  00:41:40,340 - #15 i
INFO  00:41:40,340 - #29 ==
INFO  00:41:40,340 - #47 2
INFO  00:41:40,340 - #7 )
INFO  00:41:40,340 - #15 ibool
INFO  00:41:40,340 - #12 =
INFO  00:41:40,340 - #49 true
INFO  00:41:40,341 - #5 ;
INFO  00:41:40,341 - #4 }
INFO  00:41:40,341 - #16 if
INFO  00:41:40,342 - #6 (
INFO  00:41:40,342 - #15 ibool
INFO  00:41:40,342 - #7 )
INFO  00:41:40,342 - #16 if
INFO  00:41:40,342 - #6 (
INFO  00:41:40,342 - #15 i
INFO  00:41:40,342 - #29 ==
INFO  00:41:40,343 - #47 5
INFO  00:41:40,343 - #7 )
INFO  00:41:40,343 - #9 print
INFO  00:41:40,343 - #6 (
INFO  00:41:40,343 - #47 1
INFO  00:41:40,343 - #7 )
INFO  00:41:40,343 - #5 ;
INFO  00:41:40,343 - #17 else
INFO  00:41:40,343 - #9 print
INFO  00:41:40,344 - #6 (
INFO  00:41:40,344 - #26 -
INFO  00:41:40,344 - #47 1
INFO  00:41:40,344 - #7 )
INFO  00:41:40,344 - #5 ;
INFO  00:41:40,344 - #15 niz
INFO  00:41:40,344 - #12 =
INFO  00:41:40,345 - #27 new
INFO  00:41:40,345 - #15 int
INFO  00:41:40,345 - #41 [
INFO  00:41:40,345 - #47 3
INFO  00:41:40,345 - #42 ]
INFO  00:41:40,345 - #3 {
INFO  00:41:40,346 - #47 1
INFO  00:41:40,347 - #8 ,
INFO  00:41:40,349 - #47 2
INFO  00:41:40,349 - #4 }
INFO  00:41:40,350 - #5 ;
INFO  00:41:40,350 - #15 niz2
INFO  00:41:40,350 - #12 =
INFO  00:41:40,350 - #27 new
INFO  00:41:40,350 - #15 char
INFO  00:41:40,350 - #41 [
INFO  00:41:40,350 - #47 3
INFO  00:41:40,350 - #42 ]
INFO  00:41:40,350 - #3 {
INFO  00:41:40,350 - #48 a
INFO  00:41:40,350 - #8 ,
INFO  00:41:40,351 - #47 1
INFO  00:41:40,351 - #8 ,
INFO  00:41:40,351 - #48 c
INFO  00:41:40,353 - #4 }
INFO  00:41:40,353 - #5 ;
INFO  00:41:40,353 - #9 print
INFO  00:41:40,353 - #6 (
INFO  00:41:40,353 - #15 eol
INFO  00:41:40,353 - #7 )
INFO  00:41:40,354 - #5 ;
INFO  00:41:40,354 - #15 i
INFO  00:41:40,354 - #12 =
INFO  00:41:40,354 - #47 0
INFO  00:41:40,354 - #5 ;
INFO  00:41:40,355 - #15 i
INFO  00:41:40,355 - #12 =
INFO  00:41:40,355 - #15 inkrement
INFO  00:41:40,355 - #6 (
INFO  00:41:40,355 - #15 i
INFO  00:41:40,355 - #8 ,
INFO  00:41:40,355 - #49 true
INFO  00:41:40,355 - #7 )
INFO  00:41:40,356 - #5 ;
INFO  00:41:40,356 - #4 }
INFO  00:41:40,356 - #4 }
ERROR 00:41:40,509 - Parsiranje NIJE uspesno zavrseno!
