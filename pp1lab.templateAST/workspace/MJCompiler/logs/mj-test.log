INFO  01:28:35,613 - Compiling source file: C:\Users\Dusan\Desktop\micko\pp1lab.templateAST\workspace\MJCompiler\test\test3.mj
INFO  01:28:35,837 - #2 program
INFO  01:28:35,838 - #15 test2
INFO  01:28:35,838 - #40 enum
INFO  01:28:35,840 - #15 IncrementType
INFO  01:28:35,840 - #3 {
INFO  01:28:35,841 - #15 BY_ONE
INFO  01:28:35,841 - #8 ,
INFO  01:28:35,842 - #15 DOUBLE_VALUE
INFO  01:28:35,842 - #8 ,
INFO  01:28:35,842 - #15 BY_ONE
INFO  01:28:35,843 - #4 }
INFO  01:28:35,843 - #15 int
INFO  01:28:35,844 - #15 i
INFO  01:28:35,845 - #5 ;
INFO  01:28:35,848 - #15 bool
INFO  01:28:35,849 - #15 ibool
INFO  01:28:35,849 - #5 ;
INFO  01:28:35,849 - #15 int
INFO  01:28:35,849 - #15 niz
INFO  01:28:35,849 - #41 [
INFO  01:28:35,850 - #42 ]
INFO  01:28:35,850 - #5 ;
INFO  01:28:35,852 - #15 char
INFO  01:28:35,852 - #15 niz2
INFO  01:28:35,852 - #41 [
INFO  01:28:35,852 - #42 ]
INFO  01:28:35,852 - #5 ;
INFO  01:28:35,852 - #3 {
INFO  01:28:35,852 - #15 int
INFO  01:28:35,854 - #15 sum
INFO  01:28:35,854 - #6 (
INFO  01:28:35,854 - #15 int
INFO  01:28:35,854 - #15 z
INFO  01:28:35,854 - #8 ,
INFO  01:28:35,855 - #15 int
INFO  01:28:35,856 - #15 d
INFO  01:28:35,856 - #7 )
INFO  01:28:35,856 - #3 {
INFO  01:28:35,857 - #10 return
INFO  01:28:35,858 - #49 true
INFO  01:28:35,858 - #5 ;
INFO  01:28:35,859 - #4 }
INFO  01:28:35,859 - #15 int
INFO  01:28:35,862 - #15 inkrement
INFO  01:28:35,862 - #6 (
INFO  01:28:35,862 - #15 int
INFO  01:28:35,862 - #15 a
INFO  01:28:35,862 - #8 ,
INFO  01:28:35,862 - #15 IncrementType
INFO  01:28:35,862 - #15 type
INFO  01:28:35,863 - #7 )
INFO  01:28:35,863 - #15 int
INFO  01:28:35,863 - #15 pom
INFO  01:28:35,863 - #5 ;
INFO  01:28:35,863 - #3 {
INFO  01:28:35,863 - #16 if
INFO  01:28:35,863 - #6 (
INFO  01:28:35,864 - #15 type
INFO  01:28:35,865 - #29 ==
INFO  01:28:35,874 - #15 IncrementType
INFO  01:28:35,876 - #28 .
INFO  01:28:35,876 - #15 BY_ONE
INFO  01:28:35,877 - #7 )
INFO  01:28:35,879 - #15 pom
INFO  01:28:35,879 - #12 =
INFO  01:28:35,879 - #47 1
INFO  01:28:35,880 - #5 ;
INFO  01:28:35,881 - #17 else
INFO  01:28:35,881 - #16 if
INFO  01:28:35,883 - #6 (
INFO  01:28:35,884 - #15 type
INFO  01:28:35,884 - #29 ==
INFO  01:28:35,884 - #15 IncrementType
INFO  01:28:35,884 - #28 .
INFO  01:28:35,884 - #15 DOUBLE_VALUE
INFO  01:28:35,884 - #7 )
INFO  01:28:35,885 - #15 pom
INFO  01:28:35,885 - #12 =
INFO  01:28:35,885 - #15 a
INFO  01:28:35,885 - #5 ;
INFO  01:28:35,886 - #10 return
INFO  01:28:35,886 - #15 sum
INFO  01:28:35,886 - #6 (
INFO  01:28:35,886 - #15 a
INFO  01:28:35,887 - #8 ,
INFO  01:28:35,889 - #15 pom
INFO  01:28:35,889 - #7 )
INFO  01:28:35,889 - #5 ;
INFO  01:28:35,890 - #4 }
INFO  01:28:35,890 - #13 void
INFO  01:28:35,890 - #15 main
INFO  01:28:35,891 - #6 (
INFO  01:28:35,891 - #7 )
INFO  01:28:35,891 - #3 {
INFO  01:28:35,893 - #16 if
INFO  01:28:35,893 - #6 (
INFO  01:28:35,894 - #47 1
INFO  01:28:35,895 - #30 !=
INFO  01:28:35,895 - #47 1
INFO  01:28:35,906 - #7 )
INFO  01:28:35,906 - #9 print
INFO  01:28:35,907 - #6 (
INFO  01:28:35,907 - #26 -
INFO  01:28:35,907 - #47 6
INFO  01:28:35,907 - #7 )
INFO  01:28:35,907 - #5 ;
INFO  01:28:35,907 - #17 else
INFO  01:28:35,908 - #9 print
INFO  01:28:35,908 - #6 (
INFO  01:28:35,908 - #47 0
INFO  01:28:35,908 - #7 )
INFO  01:28:35,908 - #5 ;
INFO  01:28:35,908 - #15 ibool
INFO  01:28:35,909 - #12 =
INFO  01:28:35,909 - #49 false
INFO  01:28:35,909 - #5 ;
INFO  01:28:35,909 - #15 i
INFO  01:28:35,909 - #12 =
INFO  01:28:35,909 - #47 0
INFO  01:28:35,909 - #5 ;
INFO  01:28:35,909 - #18 for
INFO  01:28:35,910 - #6 (
INFO  01:28:35,910 - #15 i
INFO  01:28:35,910 - #12 =
INFO  01:28:35,910 - #47 0
INFO  01:28:35,910 - #5 ;
INFO  01:28:35,910 - #15 i
INFO  01:28:35,914 - #33 <
INFO  01:28:35,918 - #47 5
INFO  01:28:35,922 - #5 ;
INFO  01:28:35,923 - #15 i
INFO  01:28:35,923 - #22 ++
INFO  01:28:35,923 - #7 )
INFO  01:28:35,924 - #3 {
INFO  01:28:35,926 - #16 if
INFO  01:28:35,928 - #6 (
INFO  01:28:35,928 - #15 i
INFO  01:28:35,928 - #29 ==
INFO  01:28:35,929 - #47 2
INFO  01:28:35,929 - #7 )
INFO  01:28:35,929 - #15 ibool
INFO  01:28:35,929 - #12 =
INFO  01:28:35,930 - #49 true
INFO  01:28:35,930 - #5 ;
INFO  01:28:35,930 - #4 }
INFO  01:28:35,930 - #16 if
INFO  01:28:35,931 - #6 (
INFO  01:28:35,931 - #15 ibool
INFO  01:28:35,931 - #7 )
INFO  01:28:35,934 - #16 if
INFO  01:28:35,934 - #6 (
INFO  01:28:35,936 - #15 i
INFO  01:28:35,936 - #29 ==
INFO  01:28:35,936 - #47 5
INFO  01:28:35,936 - #7 )
INFO  01:28:35,936 - #9 print
INFO  01:28:35,937 - #6 (
INFO  01:28:35,937 - #47 1
INFO  01:28:35,937 - #7 )
INFO  01:28:35,937 - #5 ;
INFO  01:28:35,937 - #17 else
INFO  01:28:35,937 - #9 print
INFO  01:28:35,937 - #6 (
INFO  01:28:35,938 - #26 -
INFO  01:28:35,938 - #47 1
INFO  01:28:35,938 - #7 )
INFO  01:28:35,938 - #5 ;
INFO  01:28:35,938 - #15 niz
INFO  01:28:35,938 - #12 =
INFO  01:28:35,939 - #27 new
INFO  01:28:35,940 - #15 int
INFO  01:28:35,940 - #41 [
INFO  01:28:35,940 - #47 3
INFO  01:28:35,940 - #42 ]
INFO  01:28:35,940 - #3 {
INFO  01:28:35,942 - #47 1
INFO  01:28:35,943 - #8 ,
INFO  01:28:35,945 - #47 2
INFO  01:28:35,945 - #4 }
INFO  01:28:35,946 - #5 ;
INFO  01:28:35,946 - #15 niz2
INFO  01:28:35,946 - #12 =
INFO  01:28:35,946 - #27 new
INFO  01:28:35,947 - #15 char
INFO  01:28:35,947 - #41 [
INFO  01:28:35,947 - #47 3
INFO  01:28:35,947 - #42 ]
INFO  01:28:35,948 - #3 {
INFO  01:28:35,948 - #48 a
INFO  01:28:35,949 - #8 ,
INFO  01:28:35,953 - #47 1
INFO  01:28:35,970 - #8 ,
INFO  01:28:35,970 - #48 c
INFO  01:28:35,970 - #4 }
INFO  01:28:35,971 - #5 ;
INFO  01:28:35,971 - #9 print
INFO  01:28:35,971 - #6 (
INFO  01:28:35,971 - #15 eol
INFO  01:28:35,972 - #7 )
INFO  01:28:35,972 - #5 ;
INFO  01:28:35,972 - #15 i
INFO  01:28:35,972 - #12 =
INFO  01:28:35,972 - #47 0
INFO  01:28:35,973 - #5 ;
INFO  01:28:35,974 - #15 i
INFO  01:28:35,974 - #12 =
INFO  01:28:35,974 - #15 inkrement
INFO  01:28:35,974 - #6 (
INFO  01:28:35,975 - #15 i
INFO  01:28:35,975 - #8 ,
INFO  01:28:35,975 - #49 true
INFO  01:28:35,975 - #7 )
INFO  01:28:35,975 - #5 ;
INFO  01:28:35,975 - #4 }
INFO  01:28:35,975 - #4 }
ERROR 01:28:36,095 - Parsiranje NIJE uspesno zavrseno!
