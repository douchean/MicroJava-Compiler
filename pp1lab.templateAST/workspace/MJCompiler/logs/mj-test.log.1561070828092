INFO  00:45:35,894 - Compiling source file: C:\Users\Dusan\Desktop\micko\pp1lab.templateAST\workspace\MJCompiler\test\test2.mj
INFO  00:45:36,119 - #2 program
INFO  00:45:36,119 - #15 test2
INFO  00:45:36,119 - #40 enum
INFO  00:45:36,123 - #15 IncrementType
INFO  00:45:36,123 - #3 {
INFO  00:45:36,124 - #15 BY_ONE
INFO  00:45:36,124 - #8 ,
INFO  00:45:36,124 - #15 DOUBLE_VALUE
INFO  00:45:36,124 - #4 }
INFO  00:45:36,125 - #15 int
INFO  00:45:36,126 - #15 i
INFO  00:45:36,127 - #5 ;
INFO  00:45:36,130 - #15 bool
INFO  00:45:36,131 - #15 ibool
INFO  00:45:36,131 - #5 ;
INFO  00:45:36,131 - #15 int
INFO  00:45:36,131 - #15 niz
INFO  00:45:36,131 - #41 [
INFO  00:45:36,132 - #42 ]
INFO  00:45:36,132 - #5 ;
INFO  00:45:36,133 - #3 {
INFO  00:45:36,133 - #15 int
INFO  00:45:36,134 - #15 sum
INFO  00:45:36,134 - #6 (
INFO  00:45:36,135 - #15 int
INFO  00:45:36,135 - #15 z
INFO  00:45:36,135 - #8 ,
INFO  00:45:36,136 - #15 int
INFO  00:45:36,137 - #15 d
INFO  00:45:36,137 - #7 )
INFO  00:45:36,137 - #3 {
INFO  00:45:36,139 - #10 return
INFO  00:45:36,140 - #15 z
INFO  00:45:36,140 - #11 +
INFO  00:45:36,141 - #15 d
INFO  00:45:36,142 - #5 ;
INFO  00:45:36,143 - #4 }
INFO  00:45:36,143 - #15 int
INFO  00:45:36,144 - #15 inkrement
INFO  00:45:36,145 - #6 (
INFO  00:45:36,145 - #15 int
INFO  00:45:36,145 - #15 a
INFO  00:45:36,145 - #8 ,
INFO  00:45:36,145 - #15 IncrementType
INFO  00:45:36,145 - #15 type
INFO  00:45:36,146 - #7 )
INFO  00:45:36,146 - #15 int
INFO  00:45:36,146 - #15 pom
INFO  00:45:36,146 - #5 ;
INFO  00:45:36,146 - #3 {
INFO  00:45:36,147 - #16 if
INFO  00:45:36,147 - #6 (
INFO  00:45:36,147 - #15 type
INFO  00:45:36,147 - #29 ==
INFO  00:45:36,148 - #15 IncrementType
INFO  00:45:36,151 - #28 .
INFO  00:45:36,151 - #15 BY_ONE
INFO  00:45:36,151 - #7 )
INFO  00:45:36,161 - #15 pom
INFO  00:45:36,169 - #12 =
INFO  00:45:36,172 - #47 1
INFO  00:45:36,173 - #5 ;
INFO  00:45:36,175 - #17 else
INFO  00:45:36,176 - #16 if
INFO  00:45:36,177 - #6 (
INFO  00:45:36,177 - #15 type
INFO  00:45:36,178 - #29 ==
INFO  00:45:36,178 - #15 IncrementType
INFO  00:45:36,178 - #28 .
INFO  00:45:36,178 - #15 DOUBLE_VALUE
INFO  00:45:36,180 - #7 )
INFO  00:45:36,180 - #15 pom
INFO  00:45:36,181 - #12 =
INFO  00:45:36,181 - #15 a
INFO  00:45:36,181 - #5 ;
INFO  00:45:36,182 - #10 return
INFO  00:45:36,183 - #15 sum
INFO  00:45:36,183 - #6 (
INFO  00:45:36,183 - #15 a
INFO  00:45:36,183 - #8 ,
INFO  00:45:36,185 - #15 pom
INFO  00:45:36,186 - #7 )
INFO  00:45:36,190 - #5 ;
INFO  00:45:36,193 - #4 }
INFO  00:45:36,194 - #13 void
INFO  00:45:36,194 - #15 main
INFO  00:45:36,194 - #6 (
INFO  00:45:36,194 - #7 )
INFO  00:45:36,194 - #3 {
INFO  00:45:36,196 - #16 if
INFO  00:45:36,196 - #6 (
INFO  00:45:36,197 - #47 1
INFO  00:45:36,197 - #30 !=
INFO  00:45:36,197 - #47 1
INFO  00:45:36,202 - #7 )
INFO  00:45:36,205 - #9 print
INFO  00:45:36,206 - #6 (
INFO  00:45:36,206 - #26 -
INFO  00:45:36,206 - #47 6
INFO  00:45:36,206 - #7 )
INFO  00:45:36,206 - #5 ;
INFO  00:45:36,207 - #17 else
INFO  00:45:36,207 - #9 print
INFO  00:45:36,207 - #6 (
INFO  00:45:36,207 - #47 0
INFO  00:45:36,207 - #7 )
INFO  00:45:36,207 - #5 ;
INFO  00:45:36,207 - #15 ibool
INFO  00:45:36,208 - #12 =
INFO  00:45:36,208 - #49 false
INFO  00:45:36,208 - #5 ;
INFO  00:45:36,209 - #15 i
INFO  00:45:36,209 - #12 =
INFO  00:45:36,209 - #47 0
INFO  00:45:36,209 - #5 ;
INFO  00:45:36,209 - #18 for
INFO  00:45:36,209 - #6 (
INFO  00:45:36,210 - #15 i
INFO  00:45:36,210 - #12 =
INFO  00:45:36,210 - #47 0
INFO  00:45:36,210 - #5 ;
INFO  00:45:36,210 - #15 i
INFO  00:45:36,212 - #33 <
INFO  00:45:36,212 - #47 5
INFO  00:45:36,214 - #5 ;
INFO  00:45:36,215 - #15 i
INFO  00:45:36,215 - #22 ++
INFO  00:45:36,215 - #7 )
INFO  00:45:36,216 - #3 {
INFO  00:45:36,218 - #16 if
INFO  00:45:36,218 - #6 (
INFO  00:45:36,218 - #15 i
INFO  00:45:36,218 - #29 ==
INFO  00:45:36,218 - #47 2
INFO  00:45:36,219 - #7 )
INFO  00:45:36,219 - #15 ibool
INFO  00:45:36,219 - #12 =
INFO  00:45:36,219 - #49 true
INFO  00:45:36,219 - #5 ;
INFO  00:45:36,220 - #4 }
INFO  00:45:36,221 - #16 if
INFO  00:45:36,223 - #6 (
INFO  00:45:36,223 - #15 ibool
INFO  00:45:36,223 - #7 )
INFO  00:45:36,223 - #16 if
INFO  00:45:36,224 - #6 (
INFO  00:45:36,224 - #15 i
INFO  00:45:36,224 - #29 ==
INFO  00:45:36,224 - #47 5
INFO  00:45:36,224 - #7 )
INFO  00:45:36,224 - #9 print
INFO  00:45:36,224 - #6 (
INFO  00:45:36,224 - #47 1
INFO  00:45:36,224 - #7 )
INFO  00:45:36,225 - #5 ;
INFO  00:45:36,225 - #17 else
INFO  00:45:36,225 - #9 print
INFO  00:45:36,225 - #6 (
INFO  00:45:36,225 - #26 -
INFO  00:45:36,225 - #47 1
INFO  00:45:36,225 - #7 )
INFO  00:45:36,225 - #5 ;
INFO  00:45:36,225 - #15 niz
INFO  00:45:36,225 - #12 =
INFO  00:45:36,225 - #27 new
INFO  00:45:36,226 - #15 int
INFO  00:45:36,226 - #41 [
INFO  00:45:36,226 - #47 3
INFO  00:45:36,226 - #42 ]
INFO  00:45:36,226 - #3 {
INFO  00:45:36,227 - #47 1
INFO  00:45:36,229 - #8 ,
INFO  00:45:36,231 - #47 2
INFO  00:45:36,231 - #8 ,
INFO  00:45:36,231 - #47 3
INFO  00:45:36,232 - #4 }
INFO  00:45:36,232 - #5 ;
INFO  00:45:36,232 - #15 niz
INFO  00:45:36,232 - #41 [
INFO  00:45:36,233 - #47 2
INFO  00:45:36,234 - #42 ]
INFO  00:45:36,234 - #12 =
INFO  00:45:36,234 - #15 sum
INFO  00:45:36,234 - #6 (
INFO  00:45:36,234 - #15 niz
INFO  00:45:36,235 - #41 [
INFO  00:45:36,235 - #47 1
INFO  00:45:36,235 - #42 ]
INFO  00:45:36,235 - #8 ,
INFO  00:45:36,235 - #15 niz
INFO  00:45:36,235 - #41 [
INFO  00:45:36,235 - #47 0
INFO  00:45:36,236 - #42 ]
INFO  00:45:36,236 - #7 )
INFO  00:45:36,236 - #11 +
INFO  00:45:36,236 - #47 1
INFO  00:45:36,236 - #5 ;
INFO  00:45:36,236 - #16 if
INFO  00:45:36,236 - #6 (
INFO  00:45:36,236 - #15 niz
INFO  00:45:36,236 - #41 [
INFO  00:45:36,238 - #47 2
INFO  00:45:36,238 - #42 ]
INFO  00:45:36,238 - #29 ==
INFO  00:45:36,239 - #47 4
INFO  00:45:36,239 - #24 ||
INFO  00:45:36,239 - #47 4
INFO  00:45:36,240 - #29 ==
INFO  00:45:36,241 - #47 4
INFO  00:45:36,241 - #7 )
INFO  00:45:36,241 - #9 print
INFO  00:45:36,241 - #6 (
INFO  00:45:36,241 - #15 ord
INFO  00:45:36,241 - #6 (
INFO  00:45:36,241 - #48 A
INFO  00:45:36,241 - #7 )
INFO  00:45:36,242 - #7 )
INFO  00:45:36,242 - #5 ;
INFO  00:45:36,242 - #17 else
INFO  00:45:36,242 - #9 print
INFO  00:45:36,242 - #6 (
INFO  00:45:36,242 - #15 ord
INFO  00:45:36,242 - #6 (
INFO  00:45:36,242 - #48 a
INFO  00:45:36,243 - #7 )
INFO  00:45:36,243 - #7 )
INFO  00:45:36,243 - #5 ;
INFO  00:45:36,243 - #9 print
INFO  00:45:36,243 - #6 (
INFO  00:45:36,243 - #15 eol
INFO  00:45:36,243 - #7 )
INFO  00:45:36,243 - #5 ;
INFO  00:45:36,243 - #15 i
INFO  00:45:36,244 - #12 =
INFO  00:45:36,244 - #47 0
INFO  00:45:36,244 - #5 ;
INFO  00:45:36,244 - #18 for
INFO  00:45:36,244 - #6 (
INFO  00:45:36,244 - #5 ;
INFO  00:45:36,246 - #15 i
INFO  00:45:36,246 - #33 <
INFO  00:45:36,246 - #47 10
INFO  00:45:36,246 - #5 ;
INFO  00:45:36,247 - #7 )
INFO  00:45:36,247 - #3 {
INFO  00:45:36,247 - #16 if
INFO  00:45:36,247 - #6 (
INFO  00:45:36,247 - #15 i
INFO  00:45:36,247 - #29 ==
INFO  00:45:36,247 - #47 3
INFO  00:45:36,248 - #7 )
INFO  00:45:36,248 - #3 {
INFO  00:45:36,248 - #15 i
INFO  00:45:36,248 - #22 ++
INFO  00:45:36,248 - #5 ;
INFO  00:45:36,249 - #20 continue
INFO  00:45:36,249 - #5 ;
INFO  00:45:36,249 - #4 }
INFO  00:45:36,250 - #16 if
INFO  00:45:36,250 - #6 (
INFO  00:45:36,251 - #15 i
INFO  00:45:36,251 - #29 ==
INFO  00:45:36,251 - #47 4
INFO  00:45:36,251 - #7 )
INFO  00:45:36,252 - #19 break
INFO  00:45:36,254 - #5 ;
INFO  00:45:36,254 - #15 i
INFO  00:45:36,261 - #12 =
INFO  00:45:36,262 - #15 inkrement
INFO  00:45:36,262 - #6 (
INFO  00:45:36,262 - #15 i
INFO  00:45:36,262 - #8 ,
INFO  00:45:36,263 - #15 IncrementType
INFO  00:45:36,263 - #28 .
INFO  00:45:36,263 - #15 BY_ONE
INFO  00:45:36,263 - #7 )
INFO  00:45:36,264 - #5 ;
INFO  00:45:36,264 - #4 }
INFO  00:45:36,264 - #16 if
INFO  00:45:36,264 - #6 (
INFO  00:45:36,264 - #15 i
INFO  00:45:36,266 - #29 ==
INFO  00:45:36,266 - #47 3
INFO  00:45:36,266 - #7 )
INFO  00:45:36,267 - #9 print
INFO  00:45:36,267 - #6 (
INFO  00:45:36,268 - #47 4
INFO  00:45:36,268 - #7 )
INFO  00:45:36,268 - #5 ;
INFO  00:45:36,268 - #17 else
INFO  00:45:36,268 - #9 print
INFO  00:45:36,268 - #6 (
INFO  00:45:36,268 - #26 -
INFO  00:45:36,268 - #47 4
INFO  00:45:36,269 - #7 )
INFO  00:45:36,269 - #5 ;
INFO  00:45:36,269 - #21 read
INFO  00:45:36,269 - #6 (
INFO  00:45:36,269 - #15 niz
INFO  00:45:36,269 - #41 [
INFO  00:45:36,269 - #47 0
INFO  00:45:36,269 - #42 ]
INFO  00:45:36,269 - #7 )
INFO  00:45:36,269 - #5 ;
INFO  00:45:36,269 - #21 read
INFO  00:45:36,271 - #6 (
INFO  00:45:36,271 - #15 niz
INFO  00:45:36,271 - #41 [
INFO  00:45:36,271 - #47 1
INFO  00:45:36,272 - #42 ]
INFO  00:45:36,272 - #7 )
INFO  00:45:36,272 - #5 ;
INFO  00:45:36,272 - #21 read
INFO  00:45:36,272 - #6 (
INFO  00:45:36,272 - #15 niz
INFO  00:45:36,272 - #41 [
INFO  00:45:36,272 - #47 2
INFO  00:45:36,273 - #42 ]
INFO  00:45:36,273 - #7 )
INFO  00:45:36,273 - #5 ;
INFO  00:45:36,273 - #9 print
INFO  00:45:36,273 - #6 (
INFO  00:45:36,274 - #15 eol
INFO  00:45:36,274 - #7 )
INFO  00:45:36,274 - #5 ;
INFO  00:45:36,274 - #9 print
INFO  00:45:36,274 - #6 (
INFO  00:45:36,274 - #15 sum
INFO  00:45:36,274 - #6 (
INFO  00:45:36,274 - #15 sum
INFO  00:45:36,274 - #6 (
INFO  00:45:36,275 - #15 niz
INFO  00:45:36,275 - #41 [
INFO  00:45:36,275 - #47 0
INFO  00:45:36,275 - #42 ]
INFO  00:45:36,275 - #8 ,
INFO  00:45:36,275 - #15 niz
INFO  00:45:36,275 - #41 [
INFO  00:45:36,275 - #47 1
INFO  00:45:36,276 - #42 ]
INFO  00:45:36,276 - #7 )
INFO  00:45:36,276 - #8 ,
INFO  00:45:36,276 - #15 niz
INFO  00:45:36,276 - #41 [
INFO  00:45:36,276 - #47 2
INFO  00:45:36,276 - #42 ]
INFO  00:45:36,276 - #7 )
INFO  00:45:36,276 - #7 )
INFO  00:45:36,276 - #5 ;
INFO  00:45:36,276 - #9 print
INFO  00:45:36,277 - #6 (
INFO  00:45:36,277 - #15 eol
INFO  00:45:36,277 - #7 )
INFO  00:45:36,277 - #5 ;
INFO  00:45:36,277 - #9 print
INFO  00:45:36,277 - #6 (
INFO  00:45:36,277 - #15 inkrement
INFO  00:45:36,277 - #6 (
INFO  00:45:36,278 - #15 niz
INFO  00:45:36,278 - #41 [
INFO  00:45:36,278 - #47 2
INFO  00:45:36,278 - #42 ]
INFO  00:45:36,278 - #8 ,
INFO  00:45:36,278 - #15 IncrementType
INFO  00:45:36,278 - #28 .
INFO  00:45:36,278 - #15 DOUBLE_VALUE
INFO  00:45:36,278 - #7 )
INFO  00:45:36,278 - #7 )
INFO  00:45:36,279 - #5 ;
INFO  00:45:36,279 - #4 }
INFO  00:45:36,279 - #4 }
INFO  00:45:36,361 - Generating bytecode file: C:\Users\Dusan\Desktop\micko\pp1lab.templateAST\workspace\MJCompiler\test\program.obj
INFO  00:45:36,375 - Parsiranje uspesno zavrseno!
